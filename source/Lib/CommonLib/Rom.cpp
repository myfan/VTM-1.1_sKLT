/* The copyright in this software is being made available under the BSD
 * License, included below. This software may be subject to other third party
 * and contributor rights, including patent rights, and no such rights are
 * granted under this license.
 *
 * Copyright (c) 2010-2017, ITU/ISO/IEC
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *  * Neither the name of the ITU/ISO/IEC nor the names of its contributors may
 *    be used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

/** \file     Rom.cpp
    \brief    global variables & functions
*/

#include "Rom.h"
#include "UnitTools.h"

#include <memory.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <iomanip>

// ====================================================================================================================
// Initialize / destroy functions
// ====================================================================================================================

#if ENABLE_TRACING
CDTrace *g_trace_ctx = NULL;
#endif


//! \ingroup CommonLib
//! \{

MsgLevel g_verbosity = VERBOSE;

const TChar* nalUnitTypeToString(NalUnitType type)
{
  switch (type)
  {
  case NAL_UNIT_CODED_SLICE_TRAIL_R:    return "TRAIL_R";
  case NAL_UNIT_CODED_SLICE_TRAIL_N:    return "TRAIL_N";
  case NAL_UNIT_CODED_SLICE_TSA_R:      return "TSA_R";
  case NAL_UNIT_CODED_SLICE_TSA_N:      return "TSA_N";
  case NAL_UNIT_CODED_SLICE_STSA_R:     return "STSA_R";
  case NAL_UNIT_CODED_SLICE_STSA_N:     return "STSA_N";
  case NAL_UNIT_CODED_SLICE_BLA_W_LP:   return "BLA_W_LP";
  case NAL_UNIT_CODED_SLICE_BLA_W_RADL: return "BLA_W_RADL";
  case NAL_UNIT_CODED_SLICE_BLA_N_LP:   return "BLA_N_LP";
  case NAL_UNIT_CODED_SLICE_IDR_W_RADL: return "IDR_W_RADL";
  case NAL_UNIT_CODED_SLICE_IDR_N_LP:   return "IDR_N_LP";
  case NAL_UNIT_CODED_SLICE_CRA:        return "CRA";
  case NAL_UNIT_CODED_SLICE_RADL_R:     return "RADL_R";
  case NAL_UNIT_CODED_SLICE_RADL_N:     return "RADL_N";
  case NAL_UNIT_CODED_SLICE_RASL_R:     return "RASL_R";
  case NAL_UNIT_CODED_SLICE_RASL_N:     return "RASL_N";
#if HEVC_VPS
  case NAL_UNIT_VPS:                    return "VPS";
#endif
  case NAL_UNIT_SPS:                    return "SPS";
  case NAL_UNIT_PPS:                    return "PPS";
  case NAL_UNIT_ACCESS_UNIT_DELIMITER:  return "AUD";
  case NAL_UNIT_EOS:                    return "EOS";
  case NAL_UNIT_EOB:                    return "EOB";
  case NAL_UNIT_FILLER_DATA:            return "FILLER";
  case NAL_UNIT_PREFIX_SEI:             return "Prefix SEI";
  case NAL_UNIT_SUFFIX_SEI:             return "Suffix SEI";
  default:                              return "UNK";
  }
}

class ScanGenerator
{
private:
  UInt m_line, m_column;
  const UInt m_blockWidth, m_blockHeight;
  const UInt m_stride;
  const CoeffScanType m_scanType;

public:
  ScanGenerator(UInt blockWidth, UInt blockHeight, UInt stride, CoeffScanType scanType)
    : m_line(0), m_column(0), m_blockWidth(blockWidth), m_blockHeight(blockHeight), m_stride(stride), m_scanType(scanType)
  { }

  UInt GetCurrentX() const { return m_column; }
  UInt GetCurrentY() const { return m_line; }

  UInt GetNextIndex(UInt blockOffsetX, UInt blockOffsetY)
  {
    const UInt rtn = ((m_line + blockOffsetY) * m_stride) + m_column + blockOffsetX;

    //advance line and column to the next position
    switch (m_scanType)
    {
      //------------------------------------------------

      case SCAN_DIAG:

        if ((m_column == m_blockWidth - 1) || (m_line == 0)) //if we reach the end of a rank, go diagonally down to the next one
        {
          m_line += m_column + 1;
          m_column = 0;

          if (m_line >= m_blockHeight) //if that takes us outside the block, adjust so that we are back on the bottom row
          {
            m_column += m_line - (m_blockHeight - 1);
            m_line = m_blockHeight - 1;
          }
        }
        else
        {
          m_column++;
          m_line--;
        }
        break;

#if HEVC_USE_MDCS
      //------------------------------------------------
      case SCAN_HOR:

        if (m_column == m_blockWidth - 1)
        {
          m_line++;
          m_column = 0;
        }
        else
        {
          m_column++;
        }
        break;

      //------------------------------------------------

      case SCAN_VER:

        if (m_line == m_blockHeight - 1)
        {
          m_column++;
          m_line = 0;
        }
        else
        {
          m_line++;
        }
        break;

#endif
      //------------------------------------------------

      default:

        THROW("ERROR: Unknown scan type \"" << m_scanType << "\"in ScanGenerator::GetNextIndex");
        break;
    }

    return rtn;
  }
};

// initialize ROM variables
Void initROM()
{
  Int i, c;

#if RExt__HIGH_BIT_DEPTH_SUPPORT
  {
    c = 64;
    const Double s = sqrt((Double)c) * (64 << COM16_C806_TRANS_PREC);


    for (Int k = 0; k < c; k++)
    {
      for (Int n = 0; n < c; n++)
      {
        Double w0, v;
        const Double PI = 3.14159265358979323846;

        // DCT-II
        w0 = k == 0 ? sqrt(0.5) : 1;
        v = cos(PI*(n + 0.5)*k / c) * w0 * sqrt(2.0 / c);
        short sv = (short)(s * v + (v > 0 ? 0.5 : -0.5));
        if (g_aiT64[0][0][c*c + k*c + n] != sv)
        {
          msg(WARNING, "trap");
        }
      }
    }
  }
#endif





  // g_aucConvertToBit[ x ]: log2(x/4), if x=4 -> 0, x=8 -> 1, x=16 -> 2, ...
  // g_aucLog2[ x ]: log2(x), if x=1 -> 0, x=2 -> 1, x=4 -> 2, x=8 -> 3, x=16 -> 4, ...
  ::memset(g_aucLog2, 0, sizeof(g_aucLog2));
  c = 0;
  for( int i = 0, n = 0; i <= MAX_CU_SIZE; i++ )
  {
    g_aucNextLog2[i] = i <= 1 ? 0 : c + 1;

    if( i == ( 1 << n ) )
    {
      c = n;
      n++;
    }

    g_aucPrevLog2[i] = c;
    g_aucLog2    [i] = c;
  }

  c = 2; //for the 2x2 transforms if QTBT is on

  const Double PI = 3.14159265358979323846;

  for (i = 0; i < 7; i++)
  {
    TMatrixCoeff *iT = NULL;
    const Double s = sqrt((Double)c) * (64 << COM16_C806_TRANS_PREC);

    switch (i)
    {
    case 0: iT = g_aiTr2[0][0]; break;
    case 1: iT = g_aiTr4[0][0]; break;
    case 2: iT = g_aiTr8[0][0]; break;
    case 3: iT = g_aiTr16[0][0]; break;
    case 4: iT = g_aiTr32[0][0]; break;
    case 5: iT = g_aiTr64[0][0]; break;
    case 6: iT = g_aiTr128[0][0]; break;
    case 7: exit(0); break;
    }

    for (Int k = 0; k < c; k++)
    {
      for (Int n = 0; n < c; n++)
      {
        Double w0, w1, v;

        // DCT-II
        w0 = k == 0 ? sqrt(0.5) : 1;
        v = cos(PI*(n + 0.5)*k / c) * w0 * sqrt(2.0 / c);
        iT[DCT2*c*c + k*c + n] = (Short)(s * v + (v > 0 ? 0.5 : -0.5));

        // DCT-V
        w0 = (k == 0) ? sqrt(0.5) : 1.0;
        w1 = (n == 0) ? sqrt(0.5) : 1.0;
        v = cos(PI*n*k / (c - 0.5)) * w0 * w1 * sqrt(2.0 / (c - 0.5));
        iT[DCT5*c*c + k*c + n] = (Short)(s * v + (v > 0 ? 0.5 : -0.5));

        // DCT-VIII
        v = cos(PI*(k + 0.5)*(n + 0.5) / (c + 0.5)) * sqrt(2.0 / (c + 0.5));
        iT[DCT8*c*c + k*c + n] = (Short)(s * v + (v > 0 ? 0.5 : -0.5));

        // DST-I
        v = sin(PI*(n + 1)*(k + 1) / (c + 1)) * sqrt(2.0 / (c + 1));
        iT[DST1*c*c + k*c + n] = (Short)(s * v + (v > 0 ? 0.5 : -0.5));

        // DST-VII
        v = sin(PI*(k + 0.5)*(n + 1) / (c + 0.5)) * sqrt(2.0 / (c + 0.5));
        iT[DST7*c*c + k*c + n] = (Short)(s * v + (v > 0 ? 0.5 : -0.5));
      }
    }
    c <<= 1;
  }
  gp_sizeIdxInfo = new SizeIndexInfoLog2();
  gp_sizeIdxInfo->init(MAX_CU_SIZE);


  generateTrafoBlockSizeScaling(*gp_sizeIdxInfo);

  SizeIndexInfoLog2 sizeInfo;
  sizeInfo.init(MAX_CU_SIZE);

  // initialize scan orders
  for (UInt blockHeightIdx = 0; blockHeightIdx < sizeInfo.numAllHeights(); blockHeightIdx++)
  {
    for (UInt blockWidthIdx = 0; blockWidthIdx < sizeInfo.numAllWidths(); blockWidthIdx++)
    {
      const UInt blockWidth  = sizeInfo.sizeFrom(blockWidthIdx);
      const UInt blockHeight = sizeInfo.sizeFrom(blockHeightIdx);
      const UInt totalValues = blockWidth * blockHeight;

      //--------------------------------------------------------------------------------------------------

      //non-grouped scan orders

      for (UInt scanTypeIndex = 0; scanTypeIndex < SCAN_NUMBER_OF_TYPES; scanTypeIndex++)
      {
        const CoeffScanType scanType = CoeffScanType(scanTypeIndex);

        g_scanOrder     [SCAN_UNGROUPED][scanType][blockWidthIdx][blockHeightIdx]    = new UInt[totalValues];
        g_scanOrderPosXY[SCAN_UNGROUPED][scanType][blockWidthIdx][blockHeightIdx][0] = new UInt[totalValues];
        g_scanOrderPosXY[SCAN_UNGROUPED][scanType][blockWidthIdx][blockHeightIdx][1] = new UInt[totalValues];

        ScanGenerator fullBlockScan(blockWidth, blockHeight, blockWidth, scanType);

        for (UInt scanPosition = 0; scanPosition < totalValues; scanPosition++)
        {
          const int rasterPos = fullBlockScan.GetNextIndex( 0, 0 );
          const int posY      = rasterPos / blockWidth;
          const int posX      = rasterPos - ( posY * blockWidth );
          g_scanOrder     [SCAN_UNGROUPED][scanType][blockWidthIdx][blockHeightIdx]   [scanPosition] = rasterPos;
          g_scanOrderPosXY[SCAN_UNGROUPED][scanType][blockWidthIdx][blockHeightIdx][0][scanPosition] = posX;
          g_scanOrderPosXY[SCAN_UNGROUPED][scanType][blockWidthIdx][blockHeightIdx][1][scanPosition] = posY;
        }
      }

      if( blockWidthIdx >= sizeInfo.numWidths() || blockHeightIdx >= sizeInfo.numHeights() )
      {
        // size indizes greater than numIdxs are sizes than are only used when grouping - they will never come up as a block size - thus they can be skipped at this point
        for( UInt scanTypeIndex = 0; scanTypeIndex < SCAN_NUMBER_OF_TYPES; scanTypeIndex++ )
        {
          g_scanOrder     [SCAN_GROUPED_4x4][scanTypeIndex][blockWidthIdx][blockHeightIdx]    = nullptr;
          g_scanOrderPosXY[SCAN_GROUPED_4x4][scanTypeIndex][blockWidthIdx][blockHeightIdx][0] = nullptr;
          g_scanOrderPosXY[SCAN_GROUPED_4x4][scanTypeIndex][blockWidthIdx][blockHeightIdx][1] = nullptr;

        }

        continue;
      }

      //--------------------------------------------------------------------------------------------------

      //grouped scan orders
      const UInt  log2CGWidth    = (blockWidth & 3) + (blockHeight & 3) > 0 ? 1 : 2;
      const UInt  log2CGHeight   = (blockWidth & 3) + (blockHeight & 3) > 0 ? 1 : 2;

      const UInt  groupWidth     = 1 << log2CGWidth;
      const UInt  groupHeight    = 1 << log2CGHeight;
      const UInt  widthInGroups  = blockWidth >> log2CGWidth;
      const UInt  heightInGroups = blockHeight >> log2CGHeight;

      const UInt  groupSize      = groupWidth    * groupHeight;
      const UInt  totalGroups    = widthInGroups * heightInGroups;

      for (UInt scanTypeIndex = 0; scanTypeIndex < SCAN_NUMBER_OF_TYPES; scanTypeIndex++)
      {
        const CoeffScanType scanType = CoeffScanType(scanTypeIndex);

        g_scanOrder     [SCAN_GROUPED_4x4][scanType][blockWidthIdx][blockHeightIdx]    = new UInt[totalValues];
        g_scanOrderPosXY[SCAN_GROUPED_4x4][scanType][blockWidthIdx][blockHeightIdx][0] = new UInt[totalValues];
        g_scanOrderPosXY[SCAN_GROUPED_4x4][scanType][blockWidthIdx][blockHeightIdx][1] = new UInt[totalValues];


        ScanGenerator fullBlockScan(widthInGroups, heightInGroups, groupWidth, scanType);

        for (UInt groupIndex = 0; groupIndex < totalGroups; groupIndex++)
        {
          const UInt groupPositionY  = fullBlockScan.GetCurrentY();
          const UInt groupPositionX  = fullBlockScan.GetCurrentX();
          const UInt groupOffsetX    = groupPositionX * groupWidth;
          const UInt groupOffsetY    = groupPositionY * groupHeight;
          const UInt groupOffsetScan = groupIndex     * groupSize;

          ScanGenerator groupScan(groupWidth, groupHeight, blockWidth, scanType);

          for (UInt scanPosition = 0; scanPosition < groupSize; scanPosition++)
          {
            const int rasterPos = groupScan.GetNextIndex( groupOffsetX, groupOffsetY );
            const int posY      = rasterPos / blockWidth;
            const int posX      = rasterPos - ( posY * blockWidth );

            g_scanOrder     [SCAN_GROUPED_4x4][scanType][blockWidthIdx][blockHeightIdx]   [groupOffsetScan + scanPosition] = rasterPos;
            g_scanOrderPosXY[SCAN_GROUPED_4x4][scanType][blockWidthIdx][blockHeightIdx][0][groupOffsetScan + scanPosition] = posX;
            g_scanOrderPosXY[SCAN_GROUPED_4x4][scanType][blockWidthIdx][blockHeightIdx][1][groupOffsetScan + scanPosition] = posY;
          }

          fullBlockScan.GetNextIndex(0, 0);
        }
      }

      //--------------------------------------------------------------------------------------------------
    }
  }
}

Void destroyROM()
{
  unsigned numWidths = gp_sizeIdxInfo->numAllWidths();
  unsigned numHeights = gp_sizeIdxInfo->numAllHeights();

  for (UInt groupTypeIndex = 0; groupTypeIndex < SCAN_NUMBER_OF_GROUP_TYPES; groupTypeIndex++)
  {
    for (UInt scanOrderIndex = 0; scanOrderIndex < SCAN_NUMBER_OF_TYPES; scanOrderIndex++)
    {
      for (UInt blockWidthIdx = 0; blockWidthIdx <= numWidths; blockWidthIdx++)
      {
        for (UInt blockHeightIdx = 0; blockHeightIdx <= numHeights; blockHeightIdx++)
        {
          delete[] g_scanOrder[groupTypeIndex][scanOrderIndex][blockWidthIdx][blockHeightIdx];
          g_scanOrder[groupTypeIndex][scanOrderIndex][blockWidthIdx][blockHeightIdx] = nullptr;

          delete[] g_scanOrderPosXY[groupTypeIndex][scanOrderIndex][blockWidthIdx][blockHeightIdx][0];
          g_scanOrderPosXY[groupTypeIndex][scanOrderIndex][blockWidthIdx][blockHeightIdx][0] = nullptr;

          delete[] g_scanOrderPosXY[groupTypeIndex][scanOrderIndex][blockWidthIdx][blockHeightIdx][1];
          g_scanOrderPosXY[groupTypeIndex][scanOrderIndex][blockWidthIdx][blockHeightIdx][1] = nullptr;

        }
      }
    }
  }

  delete gp_sizeIdxInfo;
  gp_sizeIdxInfo = nullptr;
}



void generateTrafoBlockSizeScaling(SizeIndexInfo& sizeIdxInfo)
{
  for (SizeType y = 0; y < sizeIdxInfo.numHeights(); y++)
  {
    for (SizeType x = 0; x < sizeIdxInfo.numWidths(); x++)
    {
      SizeType h = sizeIdxInfo.sizeFrom(y);
      SizeType w = sizeIdxInfo.sizeFrom(x);
      double factor = sqrt(h) * sqrt(w) / (double)(1 << ((g_aucLog2[h] + g_aucLog2[w]) / 2));

      g_BlockSizeTrafoScale[h][w][0] = ((int)(factor + 0.9) != 1) ? (int)(factor * (double)(1 << ADJ_QUANT_SHIFT)) : 1;
      g_BlockSizeTrafoScale[h][w][1] = ((int)(factor + 0.9) != 1) ? (int)((double)(1 << ADJ_DEQUANT_SHIFT) / factor + 0.5) : 1;
    }
  }
}

// ====================================================================================================================
// Data structure related table & variable
// ====================================================================================================================

const Int g_quantScales[SCALING_LIST_REM_NUM] =
{
  26214,23302,20560,18396,16384,14564
};

const Int g_invQuantScales[SCALING_LIST_REM_NUM] =
{
  40,45,51,57,64,72
};

//--------------------------------------------------------------------------------------------------
//structures
//EMT transform coeficient variable
TMatrixCoeff g_aiTr2  [NUM_TRANS_TYPE][  2][  2];
TMatrixCoeff g_aiTr4  [NUM_TRANS_TYPE][  4][  4];
TMatrixCoeff g_aiTr8  [NUM_TRANS_TYPE][  8][  8];
TMatrixCoeff g_aiTr16 [NUM_TRANS_TYPE][ 16][ 16];
TMatrixCoeff g_aiTr32 [NUM_TRANS_TYPE][ 32][ 32];
TMatrixCoeff g_aiTr64 [NUM_TRANS_TYPE][ 64][ 64];
TMatrixCoeff g_aiTr128[NUM_TRANS_TYPE][128][128];

#if INTRA_KLT_MATRIX
extern TMatrixCoeff g_aiKLT8x8[64][64]=
{
{  14,  28,  39,  48,  55,  61,  65,  65,  27,  47,  63,  77,  89,  97, 101,  99,  39,  65,  86, 104, 118, 128, 132, 128,  49,  81, 107, 128, 144, 155, 158, 151,  60,  94, 123, 147, 164, 175, 179, 170,  66, 102, 133, 158, 177, 188, 192, 183,  68, 106, 137, 163, 182, 193, 196, 186,  70, 108, 136, 160, 177, 186, 189, 179,},
{  44,  68,  69,  50,  13, -29, -60, -70,  77, 115, 119,  88,  28, -38, -87,-105, 104, 153, 156, 116,  39, -49,-112,-133, 124, 181, 185, 136,  44, -59,-135,-159, 136, 199, 202, 145,  42, -70,-155,-179, 139, 201, 202, 142,  34, -81,-169,-194, 134, 190, 188, 128,  22, -91,-175,-199, 117, 161, 157, 101,   8, -93,-166,-186,},
{ -36, -70, -99,-124,-140,-151,-151,-134, -52, -96,-137,-172,-196,-207,-202,-175, -51, -96,-138,-174,-198,-207,-200,-168, -35, -67, -99,-127,-144,-151,-143,-117,   2, -10, -25, -40, -48, -51, -45, -32,  44,  56,  61,  60,  59,  60,  62,  61,  81, 113, 133, 145, 150, 151, 147, 133, 102, 143, 167, 183, 188, 187, 178, 159,},
{ -53, -49,   7,  68,  84,  42, -30, -75, -98, -92,   0,  96, 121,  57, -59,-127,-135,-128, -13, 113, 146,  65, -82,-165,-164,-161, -25, 126, 170,  75, -92,-185,-187,-186, -35, 139, 196,  98, -84,-190,-196,-195, -37, 150, 217, 122, -67,-177,-185,-183, -28, 152, 222, 134, -48,-158,-160,-153, -19, 135, 194, 118, -38,-135,},
{  89, 156, 190, 195, 176, 147, 119,  96, 111, 188, 219, 206, 161, 109,  71,  47,  77, 129, 133,  93,  26, -34, -64, -65,   9,  18,  -8, -66,-132,-179,-187,-153, -53, -76,-112,-162,-205,-219,-192,-138, -69, -92,-114,-133,-134,-108, -57, -11, -41, -38, -27,  -8,  28,  80, 133, 149,  10,  38,  69, 105, 150, 199, 238, 232,},
{ -59, -82, -62,  -5,  77, 158, 209, 204,-101,-143,-127, -49,  67, 181, 251, 243,-120,-176,-171,-105,  -2, 102, 171, 174,-110,-160,-169,-134, -74, -12,  33,  49, -57, -81, -90, -91, -90, -89, -84, -67,  26,  50,  53,  28, -30, -92,-134,-129, 107, 176, 195, 153,  56, -53,-132,-145, 147, 227, 246, 199,  97, -17,-102,-122,},
{ -60, -12,  68,  55, -38, -84, -15,  75,-110, -37,  88,  73, -72,-146, -34, 107,-151, -52, 117, 103, -83,-176, -31, 145,-179, -58, 151, 142, -75,-184, -17, 179,-198, -64, 174, 175, -64,-192, -17, 195,-209, -73, 176, 186, -63,-205, -31, 188,-207, -81, 159, 173, -65,-212, -50, 161,-182, -74, 128, 141, -60,-189, -56, 129,},
{-124,-204,-229,-209,-169,-124, -80, -42,-109,-172,-165,-109, -43,   9,  47,  64,  -7,   0,  56, 126, 168, 166, 150, 122,  77, 127, 183, 211, 175,  93,  22,  -6,  70,  97, 101,  60, -36,-146,-205,-180,   2, -20, -58,-108,-176,-228,-226,-165, -37, -73, -88, -80, -63, -31,  19,  60, -13, -22,   3,  59, 124, 187, 241, 243,},
{ 122, 114,  -5,-134,-163, -80,  49, 121, 193, 188,  12,-177,-223, -98, 101, 198, 207, 208,  33,-150,-197, -80, 117, 207, 152, 152,  31, -92,-119, -52,  63, 127,  40,  30,  -2, -16, -14, -23, -25, -10, -80,-108, -46,  64, 106,  37, -77,-124,-161,-189, -57, 134, 213, 109, -86,-180,-164,-178, -38, 158, 238, 131, -66,-172,},
{ -60, -87, -70,  -8,  96, 205, 274, 255, -84,-122,-120, -75,  17, 115, 175, 163, -57, -70, -93,-113,-117,-107, -95, -77,  32,  72,  57, -11,-102,-175,-217,-200, 114, 207, 218, 154,  53, -41,-111,-127,  97, 175, 193, 163, 125,  89,  47,   9, -38, -39, -43, -33,  14,  78, 103,  73,-165,-232,-243,-205,-110,   8,  75,  65,},
{ -44,  47,  59, -62, -71,  52,  47, -83, -84,  60,  79,-102,-108,  86,  75,-119,-117,  75, 119,-105,-110, 135, 124,-122,-155,  84, 158,-102,-124, 157, 149,-136,-201,  74, 181,-110,-162, 137, 135,-161,-225,  66, 200,-103,-182, 118, 124,-163,-228,  63, 217, -78,-177, 109, 134,-132,-196,  56, 199, -48,-143,  99, 131, -93,},
{  31, 171, 251, 145, -46,-116,   2, 126, -88,  54, 175,  57,-179,-244, -40, 159,-226,-134,  28,   9,-148,-182,  16, 195,-219,-157,  21,  98,  48,   6,  64, 134, -81, -34,  58, 125, 143,  71, -47, -90,  74,  80,  -2, -31,  42,  34,-149,-256, 162, 112,-111,-201, -33, 109,  -9,-149, 157,  92,-127,-207,  -2, 222, 185,  41,},
{-200,-210,-131,-121,-169,-147, -14,  79,-170, -93,  85, 108,  -7, -40,  86, 173, -55,  91, 293, 275,  67, -55,  12,  87, -35,  59, 161,  86,-108,-206,-148, -65, -64, -77, -84,-129,-152, -95, -23,  -1,  -9, -57,-112, -91,  62, 226, 229, 114,  91,  63, -28, -31, 122, 239, 121, -63, 136,  99, -30,-104, -50,  -9,-156,-303,},
{ 174, 139, -60,-222,-237,-124,  21,  80, 232, 194, -10,-145,-114,  19, 135, 146, 131,  88,   0,  12,  83, 114,  68,   7, -68,-136, -93,  56, 133,  45,-139,-222,-179,-236,-108,  88, 149,  24,-154,-218, -97, -93,  33, 149, 142,  65,  22,  10,  39,  83, 112,  47, -61, -55,  92, 174,  85, 107,  35,-135,-275,-217,  24, 178,},
{  11,  39,  76,  54, -46,-180,-302,-310,  14,  37,  88, 120, 103,  61,   3, -36, -40, -59, -31,  28, 109, 209, 261, 216, -77,-125,-159,-170,-130, -38,  48,  60,  31,  29, -19,-106,-183,-190,-151,-107, 163, 221, 220, 160,  62,  -3, -20, -15,  51,  58,  90, 130, 130, 100,  79,  56,-179,-252,-221,-123, -38,  -4,  -4, -14,},
{ -32,  69, -15, -70,  70, -12,-120,  64, -71,  86, -35,-103, 115,  10,-145, 106, -96, 117, -22,-112, 162,  38,-162, 125,-115, 157, -15,-152, 156,  31,-211, 109,-144, 183,  -9,-194, 146,  42,-210, 120,-178, 196,  14,-203, 155,  71,-178, 140,-209, 189,  42,-195, 138,  68,-182, 116,-194, 159,  58,-159,  97,  38,-179,  81,},
{ 129, 147, 196, 188, -29,-201, -48, 160,   3, -94, -52,  49, -84,-224, -25, 211, -54,-237,-206,  43, 101,  -3,   1,  71, 118, -17, -70, 117, 211, 101, -79,-164, 239, 157, -29, -73, -25,  19, -60,-170,  88,  59, -75,-200,-162,  74, 194,  70,-151, -72,  60,  16, -63,  75, 187,  64,-208, -50, 215, 191, -42,-118, -99,-159,},
{-144,-284,-151,  89,  65,-100, -36, 124,  31,-104,   7, 243, 135,-156,-110, 115, 246,  97,  24, 121,  22,-183,-115, 109, 212,  19,-184,-136, -41, -22,  34, 116,  43, -79,-181,-111,  90, 184,  72, -57, -46,  12,  90,  61,  73, 113, -77,-271,-106,  57, 213,  30,-140, -23,  -6,-136,-179, -47, 127, -50,-214,   8, 220, 163,},
{ 269,  47,-165, -10, 152,  73, -48, -58, 300, -11,-279, -42, 147,  15, -93, -39, 167, -76,-198,  53, 113, -78, -55, 103,   4, -84,  18, 196,  58,-173, -31, 190,-117, -73, 126, 153, -83,-217, -39, 126,-138, -28, 115,   4,-121, -28,  64,  14, -64,  59,  79,-112, -77, 212, 153,-155,   8,  94,  36,-161, -82, 216,  89,-285,},
{ -83, -25, 129, 245, 269, 179,   7, -96,-135,-138,-109,-108,-110,-104,-131,-142,  44,  58, -30,-152,-152,  -1, 144, 158, 171, 226, 161,  60,  33,  86, 142, 135, -27, -48, -49, -22, -30,-123,-223,-213,-138,-199,-120,  40, 125,  60, -47, -72,  11,   9,  46, 115, 161, 152, 160, 165, 118, 113,   5,-130,-211,-205, -86,  36,},
{ -42, -33,  47,  96,  29,-129,-280,-297,  -4, -10,  32,  92, 140, 163, 176, 132,  -9, -57,-113,-134, -89,  20, 162, 175,  58,  46, -20,-108,-191,-220,-173,-110, 103, 136, 176, 197, 159,  72,   5, -13,-121,-155, -78,  41, 129, 135,  74,   8,-156,-187,-178,-175,-132, -78, -56, -72, 164, 239, 194,  53, -40, -18,  49,  61,},
{ -78,  -8,  45,-103,-131, 195, 183,-233, -61,  26, 158,  -1,-187, 106, 186,-237,  16, -58,  66, 112,-134, -84, 131, -39, 105,-139,-148, 168,  56,-166,  26, 110, 199, -24,-231, 120, 202,-141,-106,  83, 120, 122,-160, -64, 131, -46, -78,  58,-169, 132,  46,-143,   2,  59,  30,  13,-336,  90, 223, -59, -65,  39,  24, -70,},
{-169,-246,-224,  63, 186,  50,  13, -60, 111, 172,  28,  88,  31,-148, -22,   6, 125, 241, -15, -86,-134,-162, 119, 135,-227, -78,-132, -10,  80,  46, 115, -91,-206,  30,  33, 146, 157,   6, -20,-273,  36, 223, -10, -72,-104,-118, 159,  47,   5,  82,-192,-107, -42, -95, 200, 149, -62,  32, -55, 172, 207, -97, -95,-162,},
{  63, 160,   6,  67, -36,-182,  72,  20, -82,  -7,-175,  45,  56,-107, 138, -33,-103,  37,-152, 107, 132, -69, 123,-164,   3, 242, -79,  46,   5,-169, 169, -99, -93, 193,-162, -26, -23,-168, 261,   3,-218, 122,-148,  92, 146,-146, 130,-122,-140, 222,-111, 100, 167,-182,  54,-141, -55, 202,-199, -71,  61,-129, 183,  45,},
{ 230, 175,-195,-213, 137, 184, -40,-128,  37,  81,-122,-104, 121,  65, -65, -29,-241, -18, 116, 108,  19,-160, -47, 177,-224,  12, 150,  79, -57,-171, -23, 166,  34,  79, -45,-113,  -4,  92,  31, -98, 183,  65,-159,-132,  58, 223,  75,-250,  76, -49, -48,  85, -16, -32,  60, -72, -71,-124,  77, 238, -92,-266,  51, 187,},
{-261, 122,  78,-156,  -3,  13, -44,  55,-275, 220, 117,-141, 111,  70,-105,  37,-152, 206, -42,-190, 157,  33,-161,  47, -13, 119,-165,-124, 185, -13,-100, 129,  76,  35, -98,  87, 122,-121, -58,  90,  47, -81, -38, 153, -66,-160,  59, -24,  48,-121,  -7, 149,-150,   5, 289,-124,  76, -44,  18,  90,-180,  19, 236,-263,},
{  52, -51,-161,-196,-201, -91, 113, 157, 113,  95, 175, 274, 192,  41, -46, -83, -89,-147, -72,   7, -22, -60,-106,-151, -53, -80, -88,-140, -91, 114, 247, 167, 131, 224, 207,  62, -30, -44, -50, -52, -71, -74, -50, -29,  -4, -79,-177,-142,-126,-146, -97,  30, 206, 222, 179, 176,  99, 167,  68, -71,-113,-158,-127,  -8,},
{ -13, -35,  -3,  20, -11,-117,-214,-205,  34,  34,  40,  59, 132, 228, 289, 239, -51, -58, -90,-169,-207,-188,-141, -90,  69, 109, 149, 124,  71,  13, -38, -22, -56, -84, -31,  45, 124, 153, 117,  82, -63, -92,-147,-191,-192,-173,-136,-111, 181, 244, 221, 156, 113,  95, 119, 124,-127,-149,-109, -59,  -5, -25, -56, -54,},
{ -23, -73,-110,  92, 218,-152,-198, 236,  64, 115, -58,-113, 107, -32,-148, 142, -71,  95,  94,-166, -73, 194,  40,-149,-155,-102, 178,  62,-158,  86, 129,-170, 135,-131, -28, 165,-101,-149,  99,  77, 294, -37,-256,  82, 131, -87, -39,  43, -11,  45, -41, -36, 112,  46, -69, -72,-284,  94, 220,-116,-130,  41,  64,  23,},
{-258,-245,   6, 133,  43,  55,  64,-126, 189, 212, 106, -40,-199, -89, 119,  19, 101,  26,-158, -72,  54,  24,  18, -31,-195,-142, -60, 151, 254,   4,-148, -52,   7, 192, 137,-111,-149,-118,  32, 244, -10,  25, -37,-172, -45, 111,  14, -55, -34,-108,  28, 185, 191, 118,-116,-254, 105, -15, -33, -14,-163,-139, 105, 210,},
{ -47, -40, 192, 191,-221,-250, 102, 148,  27,-134,-129,  47,  44, 106,  70,-175, 175, 103,-121,-110,  69, 160,   3,-181, -76, 101,  87, -37, -77,-133,   4, 208,-299, -70,  87,  76,  97, -91,-131, 124,  83, 119, -62,-133, 113, 149, -87, -94, 206,  42,-121,-151, -97, 100, 102, -23, -75,-178, 111, 282, -57,-148,  10,  18,},
{ 292, -94,-222, 160,  46, -69,  95, -82, 128, -86, -80, 183, -82,-149, 160, -53,-199,  33, 112,  29,-107, -32, 146, -60,-207, 176,  68,-184,  71, 114, -38, -84, -25, 158, -84,-198, 206,  26,-183, 131,  28, -25, -48,  17, 141,-120,-173, 243,  58,-134,  75, 104, -90, -24,   7, -12, 102,-107,  66,  20,-196, 143, 190,-212,},
{ 119,-185,  84,  -9,-116, 168, -98,  66, 203,-205, 176,  34,-140, 171,-223,  55,  96,-224, 137, -47,-125, 235,-157, 125,  20, -66, 123, -49, -75, 149,-192,  63, -34,  82,  -2, -21,  23,  39, -84,  54,-118, 115,-176,  37,  49, -79,  81,  -6, -83, 223,-171, 154,  19,-174, 174,-129, -88, 150,-190,  97,   2,-120, 228,-117,},
{  23,  17, 134, 157,  67,  19,-120,-181, -20,-149,-195,-221,-157,  78, 228, 219, 128, 123, 196, 190,  78, -93,-242,-115, -86,-111, -50, -63,   7,  84,   9,  51, -36, -23, -41,-114, -79,  95, 112,  81, 130, 180, 142, 163,  16,-147,-197,-151,-160,-202,-247, -42,  71, 103, 189, 136,  43, 169,  80,  12, -54, -78, -37, -83,},
{  -1, 104,-134, 113, -10,  76, -54,  73,-114,  84,-160,  88,-175,  12,-102, -33, -43, 172, -64, 225, -89, 192,  76,  43, -58,  47,-256,  94,-235,   4,-146, -65,   8, 160, -88, 269, -60, 209, -11, 137,-112,  28,-165,  83,-269,  97,-205, -22,  -5, 137, -66, 179,-143, 253, -56,  87, -33,  45,-149, 146,-155,  94,-151,  48,},
{ -40,  14,-105,  -5, -54, -19,-123, -41,   3, 131,  29, 148,  41, 161, 107, 139,-105, -49,-159, -49,-245,-107,-193,-153,  80, 150,  35, 246,  90, 263, 168, 143,-100, -55,-231, -56,-240,-142,-239, -90,  15, 187,  69, 202,  59, 235,  84, 149,-100, -38,-159, -17,-189,   5,-156, -93,  42,  63, -43, 138, -54,  85,  -5,  70,},
{  77,  19,-126, -38, 295,-103,-241, 205, -84,  16, 101,-150, -27,  29,  -9,  48, -24, -73, 232,  12,-185, 132, 160,-241, 175,-163,-113,  95,   4, -97,  98, -22,  76,  31,-100, -14, 190,-152, -58, 153,-240, 148, 201,-207,  50,  45, -63, -59, -99, -20,  99,-105, -40,  75, 125, -61, 256,-144,-118, 147,  63,-165,  16,  19,},
{ 145, 203, -81,-233,  57, 184, -28,-138,-247,-186, 107, 181,   4,-165,  -6, 152, 126,   6,   3,  16, -39, -66,  19,  48, 189,  48,-129,-154,  60, 210,   7,-229,-240, -89, 179, 127, -49,-136,  26, 130,  -2,  42,  18, -52, -11, -83, -18, 108, 187,  40,-177,-107, 185, 186, -55,-214,-108, -63, 133, 102,-136,-147,  91, 104,},
{ 316, -83,-143, 183, -63,-142, 109, -18, -99,-132,  -6, 102, -18,  30, 106,-111,-170, 228, 189,-218, -57,  57, -41,   9,  -8,  18, -64,-125, 195,  51,-183, 137, 140,-174, -40, 144,  25, -75, -82,  75, 124, -74, 109,  58,-287,  49, 229,-128,-117,  -3,  19,  -4,  38,  72,  40,-181, -67, 169, -86,-115, 192,-131,-122, 212,},
{ -20, 164, 136, -64,-109,-121, -26, 141,-138,-178,-146,  19, 255, 206, -80,-155, 240, 146,  51, -32,-232,-137,  89, 110, -92,-147,  11, 142,   1, -12,  23, -49, -73,  12, -31, -24, 123, 125, -53,-106, 131, 207, -20,-199,-149, -81,  39, 207,-199,-196,  34, 266, 187,  -2,-138,-114, 132,  68, -39,-101,-147,  39, 118,   9,},
{-195, 216,-112, -21, 111,-139, 147, -76,-108, 190,-153,  35, 118,-212, 165, -73,  52, -32, -42,  36,  11, -40,  78, -54, 117,-221, 202, -43,-119, 151,-108,  49, 166,-226, 208,-101, -73, 211,-273, 148,  20, -72,  49, -43,   8, 116,-142,  74, -96, 158, -78,  50, -18,-113, 119, -45,-103, 167,-194,  85,  77,-143, 180,-113,},
{  10,  10,-122,  -3, 212,-150,-186, 256, -41,  61, 135, -92,-129, 162,  94,-203,  21,-142,   0, 139,-120, -45, 168, -90, 133,  43,-147,  11, 200,-134,-129, 163,-212, 103, 163,-203, -39, 158, -50, -50,  49,-133,  55, 131,-112,  -2,  76, -21, 270, -62,-238, 103,  88,-103, -24,  37,-259, 140, 145,-117, -30,  64,  16, -32,},
{  91,-156, -30, 261, -80,-175, 125,  -8,   1, 164, -67,-232,  42, 187,  20,-140,-227,  53, 154,  13,  69,-118,-163, 205, 184,-123,-128,   8, -14,  65,  20,   9, 139, -30,  63,  87,-144,  77,  75,-216,-278,  30,  50, -53,  45, -92, -33, 227, 114, 156,-122,-137, 201,  68,-154, -51,  15,-148,  62, 158,-174, -61, 174, -46,},
{ 260,  -4,-224,  50,  23, -13,  66, -63,-291, -17, 207, 121, -90, -85,  23,  36,  49, 129, -86,-267,  82, 188, -81,  -6, 119,-110, -18, 178,  44,-134, -91,  95, -84, -83,  95,  41,-203,  31, 168, -52,  41, 177, -73,-157, 146, 135, -94,-138,-109, -65,  -6, 107,  63,-245, -66, 314,  91, -20,  25, -17,-104, 144,  95,-212,},
{  50,  54,  42,  23,  56,  19,-117, -59,-101,-132, -69, -68, -97,  33, 141, 163, 147, 163, 118, 135,  63, -53,-186,-209,-140,-171,-207,-147, -33,  80, 236, 193,  77, 212, 249, 137,  15,-146,-223,-150, -62,-202,-231,-137,  37, 183, 167,  88,  87, 124, 162, 116, -60,-185, -94, -25, -50, -49, -52, -65,  36,  95,  43,  -9,},
{ -44, -77, -34,  29,  82,  70, -34, -44, 105, 140,  46, -54,-176,-122,  65,  96,-163,-161, -75, 113, 236, 140, -79,-152, 173, 201,  62,-168,-254,-129,  90, 178,-150,-234, -30, 200, 240, 107,-114,-163, 134, 195,  32,-203,-220, -56, 109, 137,-109,-125, -17, 154, 181,  13,-100, -92,  53,  48,   3, -65, -86,  -3,  60,  32,},
{-162, 236,-193,  55, 125,-204, 189, -97, -52,  81, -56,  13,  13, -80, 114, -64, 169,-212, 131,  -5, -83, 163,-156,  68,  63,-147, 131, -59, -85, 166,-208, 146,-103, 174, -90,  22,  42, -33,  25, -45,-116, 176,-221, 131,  43,-228, 260,-109,  18, -20,  42, -18,  -9,  20,  35, -62, 126,-204, 175, -95, -29, 146,-210, 136,},
{  44, -61,   2, 145,-191,  33, 227,-220, -46, 120,-112, -85, 209, -90,-196, 227, -89,   6, 129, -67, -78, 155, -67, -17, 192,-140, -87, 216,-146, -53, 154,-108,-131, 168, -50,-130, 179, -47,-110, 111, -90, -20, 151, -81, -51,  89, -10, -28, 298,-196,-123, 186, -45, -96,  94, -41,-197, 141,  86,-157,  78,  29, -51,  25,},
{ 221,-144, -84,  78,  93,-168,  99, -16,-209,  50, 312,-279,   8,  86,  34, -90, 151,-132, -68, -19, 228,-169, -72, 146,  66, -25,  56,   5, -94,  -5, 165,-160,-206,  90,  52, -54,  31,  10,  -6,   6, 189, -22,-181,  74,  59, -24,-144, 143,-113,  -4, 112, 112,-307, 203,  82,-149, -19, 119,-178,  42,  77, -24,-116, 112,},
{ -14, -63, 186,-195, 126, -81, 103, -74, 174,-187,  86,-135, 246,-243,  95,  14,   1, -95, 257,-229, 112, -73, 130,-111,  18, -66,  61,-123, 166,-125,  34,  25,  62,  10, -67,  65,   0, -35,  15, -13,-146, 111, -55, 106,-185, 149, -12, -32,   2, 134,-248, 202,-105, 113,-194, 143, -55,  64, -80, 165,-240, 204, -94,   9,},
{-122,  11,  32,  58, -22, -63,  23,  47, 162,  76,-132, -95,  52, 114, -21,-116,-181,-136, 171, 167,-100,-156,  15, 174, 215, 118,-155,-207,  93, 224, -44,-196,-203,-108, 136, 201, -66,-256,  43, 218, 157, 102,-115,-184,  81, 213, -10,-222,-103, -75,  86, 127, -56,-167,   9, 171,  42,  29, -37, -47,  10,  91, -15, -72,},
{-203, 266,-179,  31, 120,-178, 159, -88, 107,-112,  36,  43, -83,  53,   0,   3, 141,-204, 164, -69, -82, 205,-237, 121,-145, 154, -65,   8,  48, -81,  45,   5, -33, 115,-152,  84,  44,-138, 208,-157, 124,-222, 196, -81, -67, 138,-159, 112,  42, -57,  76, -70,  15,  93,-158,  88,-113, 169,-152,  81,  38,-158, 207,-117,},
{ 107,-115,  34,  46, -37, -72, 202,-161, -99,  69,  97,-247, 232, -43,-187, 191, 112,-129,   1, 151,-170,  47, 125,-145, -79, 161,-139,  39,  15,  -9, -34,  48,-127,  84,  -4,   8, -51, 133,-174, 106, 209,-147, -64, 193,-188,  37,  99,-101,-224, 177,  68,-236, 226, -56,-107, 112, 154,-162,  39,  45, -26, -71, 144,-100,},
{  23, -76, 160,-229, 225,-144,  40,  16, 140,-197, 151, -77,  58,-112, 171,-131, -65,  84, -32, -49,  87, -39, -46,  70, -57,  97,-132, 190,-219, 173, -71,  -4, -32, 120,-228, 267,-240, 177,-143,  84,-114, 116, -41,  14, -57, 126,-119,  50, 147,-170,  85, -38,  64,-128, 117, -52,  -4, -47, 147,-209, 205,-148, 107, -52,},
{  81,  10,-117,  79,  32, -86,  27,  20,-168,  24, 171, -97, -90, 161, -27, -56, 233, -57,-210, 115,  98,-142, -45, 120,-263,  82, 217, -95,-127, 139, 100,-173, 256, -90,-189,  44, 175,-164,-115, 199,-194,  33, 210, -71,-140, 130, 125,-195, 111,  17,-190,  60, 134,-133, -64, 129, -42, -17,  87,  -9, -98,  99,  -2, -40,},
{ 154,-200, 126, -10,-105, 167,-179, 103,-194, 231,-122,  -8, 116,-161, 158, -87,  81, -53, -16,  27,  19, -67,  85, -55,  74,-178, 194, -88, -89, 215,-231, 135,-119, 229,-214,  99,  62,-156, 133, -68,  14, -44,  31,   6, -34,  11,  72, -67, 118,-169, 154, -96, -10, 131,-235, 163, -98, 149,-125,  62,  33,-126, 181,-114,},
{  98,-156, 195,-209, 195,-166, 129, -65,   8, -41,  63, -84,  95, -90,  66, -26, -65, 126,-160, 197,-199, 162, -92,  28, -71, 127,-162, 164,-169, 177,-173, 104,  58, -91,  97, -78,  73, -83,  88, -56,  76,-141, 193,-240, 251,-216, 147, -63,  -5,  14, -28,  37, -35,  14,   4,  -8, -78, 134,-159, 175,-181, 175,-142,  68,},
{  52, -30, -37,  84, -69, -11, 104, -93,-114,  82,  39,-134, 114,  29,-186, 168, 174,-151, -14, 164,-157, -19, 201,-187,-188, 173,  19,-208, 211, -30,-163, 167, 178,-170, -18, 220,-231,  59, 127,-143,-184, 197, -36,-144, 161, -13,-138, 136, 158,-177,  41, 115,-139,  21, 103,-104, -71,  78,   0, -87, 100, -35, -36,  44,},
{  95,-126,  79,  -5, -89, 143,-165, 106,-157, 217,-138,  23, 117,-199, 233,-151, 168,-226, 149, -58, -52, 106,-132,  93,-113, 132, -60,  10,  33, -26,  14, -15, -13,  54, -92,  84, -37, -37,  96, -66, 106,-178, 166, -95, -26, 137,-214, 142,-137, 221,-193,  89,  74,-200, 261,-167,  89,-146, 128, -65, -36, 115,-143,  89,},
{ 109,-176, 209,-217, 190,-154, 113, -54, -75, 108,-100,  85, -55,  28,  -3,  -8, -55, 117,-190, 232,-245, 222,-178, 100,  48, -87, 126,-138, 121, -83,  51, -35,  45, -83, 112,-141, 166,-183, 160, -77, -70, 124,-158, 182,-197, 196,-156,  78, -26,  51, -74,  83, -82,  69, -60,  30,  60,-108, 141,-161, 161,-142, 107, -50,},
{ -14,  42, -81, 120,-157, 171,-162,  95, -11, -10,  64,-129, 196,-227, 226,-140,  87,-124,  97, -30, -59, 119,-148,  98,-157, 248,-245, 179, -74,  -9,  61, -49, 161,-254, 254,-187,  82,  -1, -57,  47,-116, 171,-149,  82,  14, -83, 124, -83,  48, -59,  12,  62,-143, 187,-192, 115,  -7,   0,  36, -83, 124,-139, 127, -71,},
{ -90, 143,-159, 148,-106,  58, -17,  -5, 125,-197, 205,-172,  93, -16, -45,  48, -93, 131,-100,  29,  71,-143, 188,-131,  37, -36, -21, 100,-201, 263,-282, 181, -25,  18,  30, -96, 186,-244, 254,-159,  60, -82,  60, -12, -71, 125,-146,  94,-114, 181,-189, 159, -92,  33,  10, -15,  87,-147, 161,-143, 105, -67,  33, -13,},
{ -47,  84,-114, 124,-117, 102, -80,  42,  78,-143, 189,-198, 178,-150, 120, -67, -65, 117,-154, 154,-137, 113, -87,  50,  37, -65,  81, -71,  56, -36,  14,  -7,  12, -24,  40, -63,  79, -84,  83, -47, -59, 108,-145, 168,-179, 172,-151,  86,  96,-174, 232,-257, 256,-237, 200,-110, -68, 128,-168, 181,-174, 156,-127,  66,},
{  50, -82,  99,-103, 100, -88,  72, -39, -87, 146,-176, 178,-165, 143,-117,  66, 101,-172, 210,-211, 196,-170, 138, -79, -91, 163,-202, 207,-194, 168,-133,  74,  77,-139, 175,-183, 175,-150, 118, -65, -68, 120,-152, 164,-157, 134,-105,  58,  59,-104, 130,-139, 135,-116,  91, -48, -33,  60, -77,  79, -76,  66, -49,  23,},
};

extern TMatrixCoeff g_aiKLT16x4[64][64]=
{
{  11,  23,  33,  43,  54,  66,  78,  88,  99, 108, 113, 116, 118, 116, 113, 107,  21,  36,  49,  64,  77,  92, 109, 123, 136, 146, 152, 156, 158, 156, 150, 139,  29,  47,  62,  80,  97, 116, 133, 147, 162, 172, 177, 182, 183, 182, 176, 161,  34,  55,  74,  93, 112, 131, 148, 161, 176, 184, 191, 197, 197, 195, 188, 173,},
{  56,  77,  93, 110, 115, 113, 101,  78,  49,  19, -12, -43, -73, -97,-109,-112,  84, 117, 138, 158, 165, 164, 146, 112,  70,  23, -20, -63,-104,-137,-154,-155, 101, 141, 167, 191, 198, 189, 170, 130,  78,  24, -29, -78,-128,-165,-181,-179, 107, 146, 174, 197, 203, 193, 170, 128,  78,  24, -33, -84,-134,-169,-186,-184,},
{  89, 111, 104,  86,  45,  -7, -49, -89,-119,-134,-124, -86, -24,  38,  76,  98, 129, 166, 163, 139,  76,  -3, -70,-125,-161,-175,-155, -98, -12,  77, 137, 162, 149, 194, 194, 163,  96,   6, -69,-128,-169,-179,-153, -87,  13, 115, 184, 208, 155, 196, 194, 162, 101,  12, -63,-115,-152,-161,-133, -62,  37, 136, 198, 217,},
{  74,  69,  22, -45,-114,-166,-178,-152,-108, -63, -24, -19, -66,-133,-193,-206, 117, 122,  63, -23,-120,-186,-189,-147, -72,  11,  69,  80,  11, -85,-176,-212, 147, 168, 112,  30, -71,-142,-141, -87,  16, 116, 185, 200, 129,  16, -94,-154, 163, 188, 144,  71, -13, -80, -72,  -8,  89, 182, 249, 266, 203,  91, -17, -84,},
{ -78,-115,-119,-105, -79, -60, -70, -99,-136,-180,-226,-246,-233,-190,-132, -87, -98,-139,-128, -97, -40,   5,   5, -24, -79,-136,-190,-221,-187,-127, -55,  -5, -84,-117, -91, -38,  47, 120, 141, 118,  58,   6, -51, -82, -52,  16,  91, 123, -55, -71, -35,  32, 121, 204, 238, 228, 185, 140,  91,  68,  93, 148, 201, 218,},
{-110,-107, -22,  67, 110,  72, -16, -86,-119, -95,   1, 102, 105,  35, -59,-107,-164,-167, -36,  98, 169, 131,  -3,-127,-182,-145,   9, 151, 167,  67, -77,-160,-178,-181, -37, 109, 205, 173,  16,-125,-210,-172,   8, 174, 204,  96, -78,-169,-160,-153, -14, 121, 198, 165,  28,-108,-184,-157,  13, 176, 203, 103, -60,-153,},
{  71, 133, 185, 219, 220, 217, 199, 163, 115,  50, -25, -98,-159,-203,-227,-193,  40,  91, 134, 164, 152, 142, 130, 100,  72,  32, -32, -79,-109,-141,-149,-124, -37, -33, -28, -32, -46, -55, -48, -37, -24,  -7,   8,  18,  41,  51,  53,  49,-114,-147,-169,-193,-200,-197,-169,-125, -72, -12,  56, 112, 163, 187, 187, 169,},
{ 107,  71, -34,-100, -78,  40, 128,  93, -20,-119,-114,  13, 101,  84, -11,-103, 168, 120, -48,-160,-127,  52, 183, 140, -20,-172,-161,  26, 164, 147, -13,-145, 192, 126, -75,-209,-173,  46, 212, 158, -15,-179,-173,  29, 196, 168, -28,-161, 164, 102, -80,-204,-176,  39, 198, 141, -19,-166,-163,  21, 163, 140, -27,-160,},
{  85,  26, -72, -86,  11, 104,  54, -58, -90,  -5, 113,  84, -78,-135,  -4, 135, 148,  63,-106,-141,  28, 186, 103, -83,-155, -34, 163, 149, -91,-207, -26, 185, 181,  83,-129,-179,  16, 197, 106,-110,-210, -61, 182, 183, -88,-245, -41, 189, 162,  73,-124,-181, -13, 163,  94,-101,-199, -63, 166, 182, -51,-199, -37, 164,},
{  86, 175, 233, 209, 124,  42, -43,-146,-219,-245,-201, -96,   5,  97, 168, 161,  50, 130, 189, 162,  83,  24, -47,-122,-162,-162, -93, -14,  38, 103, 160, 157, -63, -35,  -4, -34, -57, -13,  26,  43,  59,  65,  84,  75,   7, -48, -44, -21,-163,-178,-161,-178,-149, -33,  76, 154, 191, 192, 163,  80, -59,-170,-206,-183,},
{ -99, -16,  84,  17,-110, -93,  62, 146,  26, -82,  38, 124,   8, -91, -13,  97,-165, -34, 156,  51,-171,-150,  85, 197, -26,-199, -11, 149, -12,-191, -60, 108,-185, -32, 220, 104,-169,-178,  96, 208, -53,-244, -26, 181,  20,-214, -70, 122,-154,  -4, 234, 130,-122,-151,  81, 184, -34,-200,  -6, 200,  79,-152, -32, 148,},
{  10, -30, -36,  41, 140, 165, 117, 175, 202,  91,  26,  97, 174, 174, 209, 245,   6, -72,-136, -66,  26,   3, -86, -45,  -3,-164,-265,-176,-114,-127, -66,  28,  49, -13, -94, -52,   1, -82,-198,-141, -33,-137,-201,-109, -86,-181,-197,-115, 121,  95,  33,  57,  79,   9, -70,  15, 202, 191, 161, 267, 255,  83, -14,  -5,},
{ 169, 248, 218, 123,  -5,-101,-138, -81,  31, 136, 224, 269, 203,  55, -50, -65, 119, 165,  93,   1, -93,-172,-177,-138, -74,  19,  68, 101,  40, -96,-171,-157, -42, -68,-112, -75, -21, -13,  12, -16, -62, -82,-131,-120, -96, -83, -40, -15,-124,-171,-162, -24, 142, 209, 220, 190,  89, -14,-112,-125, -42,  67, 206, 232,},
{-104,  10, 108,   4, -47, 109, 171,   4, -50, 114, 134, -36, -23, 149, 137, -29,-160,  -4, 114, -75,-182,  41, 138,-102,-211,  49, 119,-165,-172, 108,  59,-147,-142,  37, 171, -71,-221,  17, 137,-122,-268,  30, 149,-168,-203, 104,  42,-188, -99,  92, 230, -15,-154,  70, 188, -16,-146, 109, 250, -24, -97, 162, 132, -78,},
{ -59,  82,  92,-122,-140,  55, -22,-119,  83, 104,-109, -57,  66, -75, -75, 110,-100, 110, 165,-132,-134, 150,  17,-158, 129, 170,-144, -42, 144, -91,-110, 147,-161,  70, 207, -99, -99, 227,  42,-214, 100, 170,-183, -28, 219, -71,-150, 104,-208,   1, 150, -90, -83, 211,  16,-233,  23, 101,-188, -26, 226, -39,-139,  56,},
{ 213, 225,  84, -52,-188,-177, -20, 124, 151, 112, -11,-197,-224, -27, 117, 126, 161, 139,  15, -59,-157,-180,  -6, 158, 136,  87,   0,-165,-180,  20, 134, 123, -26, -84, -80,  45,  78,   9,  13,   8, -76, -46,  55,  42,   9,  63,   7, -73,-145,-213,-112, 136, 243, 143,  25, -98,-236,-160,  93, 185, 147,  79,-113,-242,},
{  88, -69, -13, 170,  16,  24, 215,  26, -58, 115, -45,-107,  53, -78,-117,  48, 119,-159, -93, 139,-122,-153, 159, -76,-186, 145, -15, -70, 185,   2, -85, 125, 152,-183,-130, 160,-138,-221, 145,-100,-218, 175, -10, -99, 211,  10,-119, 130, 163, -99, -43, 254,   5,-106, 224,  21,-104, 189, -37,-157, 108, -64,-172,  67,},
{  22,  94, 131, 150, 229, 237, 137, 145, 153,   4, -44, -69,-210,-201,-129,-108, -94, -60, -69,-152,-109, -69,-193,-107,  38, -34,  37, 150,  45,  82, 170,  75,-108, -68,-109,-233,-173, -96,-220,-159,   5, -80,  -3, 163,  66, 107, 187,  49,  52, 166, 179,  91, 134, 214, 115, 103, 138, -62,-111, -19,-139,-136, -43,-134,},
{ 152, 158, -37,-168,-104,  85, 200, 136, -37,-213,-188,  29, 212, 136, -92,-195, 104, 126, -63,-186,-135,  48, 160, 137,   8,-149,-136,  35, 177, 147, -38,-153, -75, -24, -23,  15,  18, -26, -79, -71,  17,  50,  63,   0, -66, -50,  51,  75,-181,-104,  48, 208, 196,   3,-169,-184, -24, 174, 214,   4,-227,-218,  50, 208,},
{-110, 100,  10, -80, 117, -36, -18, 140, -53,  14,  91,-133,  64, -16,-179,  91,-157, 154, -12,-148, 160, -80, -88, 160,-148, -28, 113,-153, 146,  68,-177, 152,-144, 196, -24,-177, 184, -92,-123, 171,-172, -39, 126,-190, 137, 119,-185, 128,-110, 188, -14,-165, 187, -30, -77, 201, -92,  14, 168,-194,  58,  75,-221,  59,},
{ 185,  83,-105,-186, -48, 205, 134, -80,-181, -67, 194, 126,-130,-197,  -9, 207, 174,  53, -66,-143, -58, 194, 115, -59,-169,-108, 197, 135, -86,-130, -40, 157, -11, -58,  61,  65, -21, -19, -68,  30,  75, -52, -14, -59,   7, 135, -45, -84,-158,-162, 107, 185,  27,-143,-204,  88, 250,  49,-130,-191,  42, 261,  11,-169,},
{   5,  94, 123, 158, 165,  93,  13, -96,-208,-255,-237,-101,  15,  90, 227, 229, -70, -14, -91, -84, -32, -59,   2,  91, 114, 143, 107,  99,  10,-136,-134, -87, -86, -56,-180,-172, -87, -66,  30, 133, 169, 223, 148,  34, -37,-144,-192,-158,  55, 146, 100, 138, 100,   0, -22,-103,-213,-161,-125, -88,  72, 173, 179, 103,},
{  22,-169,  70,   7,-101,  82, -45, 134, 109,-167, -20,-108,  18, 105,-122, 126, 115,-179, 181,  91,-123,  84,-192,  40, 145,-126, 125, -45,  40, 141,-227,  66, 193,-202, 145,  28,-145, 144,-196, -32,  81,-113, 223, -38, -43, 115,-243,  36, 183,-219,  42, -37,-119, 249, -13,  15,  19,-154, 139,-100,-127, 153, -77, 137,},
{ 199,  79,-112,-105, 114, 177,-117,-182,  55, 178,   6,-252, -52, 253,  60,-133, 135,   7,-142,-122,  93, 184, -72,-189,   4, 183,  80,-181, -29, 190, -14,-135, -51, -54,  31,  38, -23, -30,   0,  63, -16, -71,  45,  79,  30, -68,-112,  70,-125, -41, 164, 121,-119,-188,  22, 275,  43,-276, -69, 159,  67,-148,-110, 238,},
{ 178, 173, 254, 198,  16,-131,-282,-176, -77,   6, 155, 150,  94, -40,-159, -90, -13,-188,-124, -81,  -9, 135,  90, 145,  86, -34, -43, -91, -12,  34,  20, 102, -81,-276,-143,-125, -53, 179, 135, 131,  32, -92,-105,-179, -54,  92,  65, 138, 163, 133, 255,  91,-112, -72,-167,-111, -38,  59, 178,  61,  30,   3,-153, -79,},
{ 201, -27,-247,  18, 207, -61,-193,  93, 219, -30,-127,  71,  94,-163, -34, 146, 208,  20,-224, -14, 198, -33,-199, -11, 123, -73,-159,  56, 121,-138, -50,  62, -54,  50,  90,  39, -28,  28,  85, -22, -76,  47,  72,  -4,  26,  46,  46, -81,-269, -19, 218,  12,-258, -41, 259,  -8,-220,  70, 164,-115,-160,  86, 135,-116,},
{ -14, 223, 179, -81,-244, -88, -65, -54, 271, 169,-153,-143, -83,-105,  40, 234,-202, -25,  28, -20,  11, 207, 101,-119,   8, -39,-109,  79, 186,  12,-116,  -3, -96, -81,-125,  77, 117,  58,  66, -78,-141,-124,  59, 169,  82,  46, -97,-190, 211, 118,-133,  64,  -2,-245, -43, 128,  90,  29,  74, -83,-274,  21, 211,  36,},
{ 203,  37,  -4, 135, -42,-285,  15, 242, -14,  23, 163,-157,-277, 107, 203,   6,  76,-135,-157,  67,  75, -96,  37, 126,-174,-194,  91,  70, -70,  90,  -7,-170, -76, -45,  10, -17,  94, 145,  10, -66, -29,   7,   2, 150, 175, -25,-138, -56, -98, 118, 169,-159,-122, 115, -62,-179, 160, 217,-193,-160,  45, -81, -11, 224,},
{  49,-130,  95,-130,   8,  19,-132,  54, -74,  62, -90,-127,  14,-168, 117, -81, 122,-113, 211, -95,  92,  98, -28, 211, -58, 161,  56,  65, 248, -59, 271, -28, 114,-185, 151,-172,  26,  -5,-165,  88,-261,  -6,-101,-121,  55,-288,  51,-193,  86,-173, 155, -88,  63,  40,-127, 170, -60, 125,  35, -62, 143,-107, 222, -26,},
{  74, -79,-161, 113, -84,-191, 126,-101,-192,  34, -49,-157,  32, -53,-212, 110, 106,  21, -69, 243,  96, -36, 224,  65, 101, 222, 142,  39, 210, 188, -57, 178, -96,  53, -77, -71, -64, -95,-103,-150,  -7,-202,-175, -75,-229, -41,-119,-122,-163, 148,  73, -82,   4, 126,  18, -28, 195, -90,  33, 267,-120,  52, 151, -30,},
{ 142, -78,  46, 132, -41, -10, 184,  23, -92, 208,  -9, -33, 262, -42, -33, 164, 101,-193, -35,   4,-145,-115,  17,-124,-243,  60,-171,-267,  28,-186,-168, -42,  24, -34, 116, -39, 108, 105, -34, 191, 111, 121, 142, 136, 111, 111, 222, -27, -58,  42,  93,-205,  76,  89,-245,  80,  20,-215, -38,  92,-151,-146, 142,-122,},
{ 209, 200,  34,-135,-272, -78, 189, 186,   6,-200,-211, 110, 193,  98, -34,-186, -54,-141, -60, 113, 107,  46, -33, -81,  22, 133,  75,  46,-117,-141,  88,  72,-155,-142, -16, 115, 177,  42,-180,-173, -92, 117, 143, -50,-135,-112,  64, 135,  63, 181,  39,-158,-131, -30, 107, 211,  10, -89,-102, -73, 172, 145, -84,-118,},
{ -53,-256,  43, 294, -90, -35, -26,-149, 276,  74,-250,   5,  -8,  86,  60,-173, 170, -48, -49,  73,-201,  39, 136,-117,  43, -22, -37, 202, -50, -63,  86,  22, 111, 172, -57,-168,  -5,  70,  90,  52,-155,-107, 121,  44, -79, -90, -66, 133,-274,  53,  64, -41, 209, -70,-231, 118,  58,  17,  71,-207,  54, 222,-147, -11,},
{ 259,  29,-107, -43, -92, 275, 106,-275, -19,  -2,  57, 200,-213,-172, 151,  -3,  -3,-179,  -4, 180,-145, -65, -23, -31, 178,  -1,-142,  70,  37,  76, 109, -81,-167, -20, 100, 157,  52,-147, -72, 144,  55, -28, -99,-131, 122,  67,-127, -89,   5, 214, -93,-272,  94, 114,  -8,  38,-189,  -2, 237, -73,  -4, -50, -82, 189,},
{ -10,  79, 123, 147,  73,  47,  75, 122,  40, -22,   1, -22,   9,-187,-165, -69, -94,-113,-214,-219,-218,-143,-157,-124, -93, -56,  75,  15, 185, 235, 238, 164,  97, 164, 120, 225, 187, 231, 145,  69, 100,  62,  43,-150,-209,-177,-179,-192, -40, -35,-120, -15,-119,-107, -62, -44,   8, -78, -40,  93, 116,  33,  96,  86,},
{-270,-127, 239, 124,-311, -63, 148,  58, -91,-136, 133, 151, -69,-179, 109,  56, 140,  95,-107,  33,  57, 142, -67, -57,  95,  45, -40,-121,   3,   9,  65, -95, 170,  95,-287, -84, 133,  91,-212,-102,  90,  58, -35,-125, 169, 103,   6,-115,-209,  -7, 149, 144,-146, -92, 103, 170, -99,-108, 105,  12,  18,-174, -20, 140,},
{ -43,  68, 124, -37,-139, 128, 241, -22,-103, 123, -46,-221,-138, 214, 121, -86, -57, -49,-104, -35,  73,-147,-249, -47, -39, 102,  92, 263, 137,-153,-196, -24, 118,  47, -17,  35, 139,  82,  11, 188, 105,-178,-340, -31,  17, -56,  74, 248, -13, -96,  76,  22,-160,   3,  20, -77, -95, 109, 207,  31,-141, 122,  -1,-179,},
{ -21,  59,-110,  67, -97, 139,-105, -45,  39, -39, 172,-236, 141,  49,  29,-109, -37,  84,-104, 205,-162, 130, -53,  46,  53,-168, 210,-219, 150,-186,  75,  29, -76,  93,-172, 203,-194,  38, -48,  45,  47,-169, 145, -78, 234,-263, 132,  15, -67, 167,-149,  93, -83, 144, -39, -70,  61, -14,  74,-179, 129, -99, 205,-176,},
{  23,-143, 257, -33, -48, 139,-113, -43, -98, -50, 256, -29, -67, 251,-187,-105, 140,-206,  38,-129, -68, 113,  13, 120,  96, -85,-142, -96, -67,  80, -64, 252,  60,  21,   9,  60, 139,-174, -66, -81,   5, 131, -78, 273,  53,-154,-125,  18,-176, 149, -38,-108, 119,-137, 207,  18,-141, 114,-117,  -3,-129,  95, 219,-160,},
{ -87, 154, -69,  52, 142,-188,  87, -94,-173, 174, 100,  81, -40, -18, 127,-263,-131,  94,-137, -71,  57, -57, 207,  74,   5,  18,-307, -83,  68, -89, 173, 115,  49,  19,  89,  33, -58,  18,-205,-120,  89,  33,  86, 156, 135,-158,-235,  63, 118,-193,  39,  52,-117, 167, -33,  94,  44,-202, 156,-145,-181, 262,   5,  -1,},
{ 189, -77, -66, 148, 134,-167, -91, 242, -33,-319, 108,  26,-155,  50, 231, -75, -78,-117,  40,-116,-131, 102,  52, -98,  81, 171,  96, -30, 128,-139,-138, -23, -39, 119, 208, -25, -93, 121, 102,-246, -33,  59,-177,-193, 182,  54,  -7, 131,   9,  14,-198,  12, 181,-179, -38, 140,  71,-137, 137, 119,-127, -41,  56, -92,},
{ 106,  19,  68, 245,  -4, -20, -15,-178,-178,  81,-138, -40, 142,  -6, -42, 178,-166,-122,-228,-199, -88, 103,  41, 272, 190,  67,  78,  29,-156, -31, -59,-135,  51, 272, 247, 107,  18,  32,-280, -87,-142,-190,   2, 119, -40, 124, 170, -39,  12,-136,-176,  40, -63,  13, 132,  82, -20, 164, -60, -94, 100,-101, -90,  54,},
{ 241,-118,-183, 157,-148,-182, 202,  27, -51, 166, 149,-149,  33,  28,-148,  39, -86,  24, 155,  39, 108, 167, -98,-168,  -4,-244, -48,  74,  11,  70,  96, -22,-168,  50,  97,-313, -93,  93, -81,  35, 309,  59, -37,  37, -90,-147,  58, -42, 134, -52, -83, 151, 133,-196, 111,  60,-275,  35,  63, -96, 123,  39, -23,  11,},
{  -4,-134,-165,  57,  90,  76, 176,  -8,-180, -76,   2,   5, 134,  59, -87, -56,  83, 227, 169, -39,-162,-232,-181,   2, 235, 175,  33,-116,-193, -76, 126, 119,-172,-174, -52, -63, 195, 292, 149, -52,-134,-251, -46, 198, 175,  41, -99,-145, 115,  42,  23,  24, -62,-191, -43,  17,  62, 129,  40,-118, -83, -17,  37,  86,},
{  53,  -9, 172,-128,  88,-103, 146,-168,  69, -40,  30,-111, 166,-123, 108, -33,   0,-189,  95,-175, 173,-149, 157,-149, 196,-148, 189,-135,  60,-114,  80, -70, 146, -28,  78, -98, 193,-242, 159,-159, 212,-272, 161, -66,  63,  -4,  29,  10, -46, -52,  87,-113,  98,-111, 220,-228, 153, -83,  89,-105,  57, -19, -31,  19,},
{  13,-137, 119,-122,  80,   6,-143, 214,-224, 251, -75,-146, 186,-167, 145, -70, 170, -88, 168, -67, -62, 122, -98, 126,-161,  35, -35,  83,  56,-189, 160, -70, -73, -38, -98, 156,-103,  49, -34, -65, 155, -47, -56,  70,-129, 144, -34, -21,-154, 306,-225, 101, -23, -38, 106, -90,  40, -69,  63,  23,-104, 182,-260, 166,},
{ 244, -14,  43, -27,-192,  41,  13,  51,  40,  -9,-152, 176, 102, -41,  50,-217,-212,-171,   4, 102, 214,  87,-173,   2,-129, 131,  82,-155,-165, -53, 113, 214,  74, 272, -15,-199,-152, -76,  41, 236, -54, -86,  27,  29, 164, 147,-281, -74, -49, -88, -55, 181,  30,  47,  19,-197,  59,  75, -94,  96,-159, -36, 110,  53,},
{-168, 350, -18,-171, 114,-129,  18, 163, -98, -94,  69, -92, 106,  67,-206, 122, -60,-216, -99, 178,  27,  77, -33,-194, 115, 111,   2,  37,-165, -24, 146, -21, 310, -14,  26,  48,-273,   7, 143,   1,  36, -65,-193, 171,  60, -27,  60,-175,-167,  14,  49,-103, 190,  21,-160, 121,-129,  64, 124,-125,  -2,  14, -68, 123,},
{ 184,  64, -44,-172, -25, 212, -39, -18,-145,  -3, 176,  15, -55,-116,  35, 125,-209,-184, 133, 252, -31,-202,-103, 166, 136,  -3,-193,-113, 203,  92, -30,-196, 160, 202,-150,-215,  37, 187, 115,-151,-177,  54, 137,  92,-149,-142, 104, 129,-116, -44,  40, 136, -38,-109, -28,  32, 138, -39, -82,  -3,   1, 140,-110, -31,},
{-141, 254,-183, -75, 193,-133, 124,-127, -51, 217,-159,  95, -57, -23, 195,-181,  23,-139, 150,  92,-129,  -2, -40, 102,  49,-171,  65,  13,   0,  47,-199, 165, 213,-137,  -9, -51, -57, 257,-174, -36,  69, -55, 133,-129, -53, 161,-130,  62,-165, 133, -20,  12,  66,-173,  89,  78,-127, 117,-124,  70,  93,-199, 188, -94,},
{-132,  -8,  64,  45, -43,-143, 169,  89,-130, -16, -23, 200, -59,-235, 127,  70, 177,  42, -86,-110, 117, 165,-215,-121, 109, 148, -56,-233,  86, 282, -78,-206, -90,-117, 142,  86,-186, -51,  80, 170, -76,-211, 124, 152, -75,-194, -53, 287,   4,  97,-106, -17, 102,   8, -27, -86,  14, 141, -90, -52,  28,  98,  44,-157,},
{  98,-150, 191,-217, 161,-110,  95, -56,   9,  74,-150, 188,-172, 168,-208, 134,  85,-152, 134,-106, 166,-170,  64,  14, -78,  86, -72, 106,-178, 164, -59,   0, -59,  94, -56,  32,-112, 133, -12, -28,  35, -40,  32,-103, 174,-160,  78, -24, -84, 153,-209, 236,-163,  91, -79,   6,  96,-169, 222,-203, 156,-130, 131, -71,},
{ -75, -37, 158, -43,-104,  16, 109,   0,-162,  49, 160,-100,-108, 163,  66,-173, 129,   4,-177,   1, 213, -28,-153, -17, 227, -51,-267, 142, 164,-204,-121, 262,-123,  22, 140,  -4,-185, -22, 193, -26,-157,   2, 248, -94,-176, 201, 108,-235,  65, -17, -76,  19,  79,  26,-101,   2, 101, -39, -64, -18, 149,-151, -30, 103,},
{ 144,  -6,-173,  91, 129,-196,  33, 102, -42, -85,  84,  46,-172, 141, -32,  -9,-206,   9, 285,-160,-181, 243,  22,-207,  39, 200,-207,  23, 149, -82, -64,  86, 192, -26,-210,  89, 184,-174,-122, 279, -73,-146, 143,  -3,-104,   3, 141,-130,-110,  39,  52,  26,-147, 110,  68,-153,  46,  53, -28, -50,  85,  -5, -74,  61,},
{-212, 229,-159, 147,-104,   5, 123,-219, 200,-135,  51,  47,-101, 141,-135,  74, 166,-119,  18, -51,  75,  -8, -93, 178,-142,  52,   7, -71,  98,-133, 117, -46,  60,-175, 263,-165,  -8,  91,-126, 125,-133, 106, -10, -57, 108,-114, 146,-122, -79, 154,-182, 100,  32,-121, 175,-199, 182,-104,  -5,  84,-137, 148,-161, 109,},
{ -28, -11,  86,-121,  69,  29, -62, -32, 216,-213,  42,  73, -49, -60, 175,-147, 111, -75, -43,  90,  15,-174, 223, -78,-167, 150, 102,-266, 193,  18,-209, 201,-133,  89,  45, -90, -13, 127,-149,  30, 171,-152,-121, 300,-209,  -6, 188,-183,  57, -12, -76, 108, -69,  23, -14,  79,-190, 171,  -7,-111,  75,  40,-132, 106,},
{ 102,-110,  53, -41,  92,-188, 277,-253, 162,-119, 128,-141, 125, -76,  50, -15, -44, -23, 158,-202, 155, -63,  -8, -48, 203,-223, 134, -49,  30, -68,  58, -44,  47,  -8,-106, 150,-104,  31,  -7,  76,-217, 215,-114,  28, -14,  47, -40,  30, -83, 119,-104, 116,-158, 214,-246, 206,-132, 125,-164, 187,-149,  96, -65,  25,},
{-163, 111,  81,-179, 169, -70, -44,  82, -35, -52, 120,-137,  59,  17, -70,  66, 274,-208, -51, 193,-198,  15, 170,-233, 134,  15, -93, 130, -36, -85, 166,-145,-261, 201,  79,-214, 189,  -7,-160, 209, -94, -51, 101,-132,  41,  81,-165, 150, 116, -75, -96, 173,-145,  42,  40, -41, -31, 103,-114, 117, -60, -16,  67, -64,},
{ 117,-135,  76,  -2, -89, 133,-104,   7,  81,-132, 141, -76, -32,  73,-115,  96,-182, 206, -91, -45, 176,-245, 215, -72, -94, 181,-178,  81,  62,-138, 204,-154, 192,-216,  90,  63,-176, 215,-171,  34, 129,-217, 187, -81, -51, 132,-182, 130,-115, 133, -60, -25,  80, -82,  45,  36,-113, 152,-126,  63,   8, -60,  85, -59,},
{ -73, 140,-191, 198,-182, 151,-116,  66,  12, -94, 149,-187, 208,-190, 146, -78,   3, -60, 100,-109, 111, -83,  78, -62,   8,  57,-108, 143,-167, 156,-110,  43, 123,-143, 156,-164, 149,-129,  57,  13, -61,  90,-126, 149,-138, 118,-117,  90,-105, 152,-177, 193,-174, 137, -73,  -2,  68,-118, 164,-181, 169,-150, 135, -84,},
{ 109,-149, 162,-134,  59,  18, -82, 124,-122,  99, -43, -31,  85,-113, 115, -76,-168, 239,-219, 158, -60, -51, 150,-216, 195,-144,  60,  63,-142, 179,-193, 129, 151,-216, 178,-113,  19,  73,-165, 209,-165, 104, -26, -90, 172,-198, 199,-126, -78, 111, -90,  52,   9, -60, 101,-108,  77, -38,  -8,  67,-110, 120,-112,  65,},
{ -56,  82,-103, 142,-148, 155,-183, 195,-198, 199,-209, 206,-182, 144, -93,  38,  28, -48,  53, -85,  89, -90, 114,-118, 133,-142, 154,-144, 116, -94,  55, -14,  56, -81, 121,-135, 148,-175, 161,-156, 131,-114,  98, -90,  93, -67,  63, -50, -61,  98,-125, 145,-159, 183,-188, 185,-173, 153,-129, 115,-106,  79, -65,  43,},
{  83,-127, 140,-152, 128,-113,  84, -45,  15,  40, -86, 121,-138, 132,-107,  61,-119, 189,-207, 208,-168, 143,-103,  45,   7, -92, 146,-189, 205,-194, 162, -95, 109,-169, 179,-172, 140,-109,  61,  -2, -55, 134,-177, 210,-224, 205,-165,  90, -55,  90, -96,  94, -77,  51, -17, -22,  53, -92, 124,-138, 139,-123,  91, -46,},
{ -45,  57, -69,  91,-109, 116,-124, 148,-136, 115,-108, 106, -95,  74, -51,  28,  64, -88, 127,-150, 162,-186, 210,-236, 213,-187, 165,-147, 127,-101,  75, -44, -66, 104,-140, 152,-168, 186,-209, 230,-207, 186,-172, 152,-125, 104, -77,  42,  42, -69,  88, -94, 104,-113, 122,-135, 124,-111, 110, -99,  76, -61,  39, -16,},
};

extern TMatrixCoeff g_aiKLT4x16[64][64]=
{
{  10,  22,  29,  35,  20,  36,  47,  53,  31,  51,  64,  72,  42,  66,  83,  92,  53,  81, 101, 111,  64,  97, 119, 128,  75, 113, 137, 146,  85, 126, 152, 161,  95, 137, 166, 175, 104, 148, 178, 186, 108, 154, 184, 193, 111, 156, 185, 196, 111, 156, 184, 195, 109, 154, 180, 191, 107, 149, 173, 185, 102, 141, 164, 174,},
{ -59, -92,-104,-107, -83,-128,-146,-148, -99,-155,-176,-177,-111,-171,-193,-194,-113,-173,-200,-199,-108,-164,-191,-189, -94,-141,-162,-164, -72,-107,-125,-127, -42, -63, -75, -77, -11, -16, -21, -21,  24,  31,  33,  36,  56,  74,  83,  86,  84, 111, 127, 130, 101, 136, 158, 160, 108, 153, 175, 175, 111, 152, 177, 177,},
{ -70,-118,-149,-158, -77,-139,-183,-197, -62,-127,-181,-205, -31, -90,-149,-178,  13, -27, -85,-126,  59,  46, -11, -56, 109, 117,  61,   7, 147, 167, 118,  58, 171, 202, 159,  91, 177, 208, 160,  88, 159, 176, 122,  52, 124, 118,  49, -14,  77,  45, -38, -99,  27, -28,-120,-176, -12, -84,-185,-228, -38,-112,-212,-250,},
{ -52, -69, -41, -16, -85,-107, -65, -25,-106,-126, -71, -16,-117,-132, -56,  11,-119,-118, -27,  55,-115, -98,  12, 105,-106, -77,  60, 156,-108, -63,  96, 199,-121, -62, 116, 231,-135, -74, 122, 249,-150, -95, 109, 241,-171,-124,  78, 216,-195,-165,  32, 182,-213,-192,  -4, 141,-217,-207, -34,  97,-202,-198, -50,  68,},
{  97, 161, 196, 194,  99, 167, 206, 205,  62, 109, 142, 142,  -3,  10,  33,  39, -75,-103, -96, -77,-121,-175,-188,-161,-134,-188,-193,-172, -95,-117,-111,-105, -22,  -1,   8,  -3,  55, 114, 124,  98,  99, 180, 194, 158, 110, 186, 186, 144,  70, 125, 110,  71,   3,  22,  -8, -37, -62, -85,-130,-143,-109,-153,-198,-203,},
{  94,  83,  -4, -68, 149, 131, -10,-102, 186, 162, -26,-142, 209, 171, -62,-189, 208, 181, -71,-231, 192, 171, -70,-248, 167, 149, -65,-224, 116, 109, -38,-168,  66,  67,  -9, -91,  19,  23,  15,  -8, -32, -29,  37,  65, -92, -70,  57, 118,-143,-109,  58, 163,-170,-144,  47, 179,-182,-154,  48, 176,-155,-130,  42, 149,},
{ -17,  38,  29, -29, -41,  38,  25, -66, -67,  44,  27, -83, -95,  50,  56, -77,-114,  68,  91, -83,-133,  88, 116, -82,-154,  96, 143, -84,-173, 101, 166, -93,-207, 106, 171,-118,-234, 110, 165,-145,-228, 114, 159,-151,-219, 120, 158,-153,-201, 134, 158,-155,-178, 147, 155,-142,-166, 138, 149,-125,-141, 115, 121,-117,},
{ 127, 193, 201, 176, 107, 165, 151, 126,  20,  34,   3, -12, -64,-101,-147,-151,-108,-159,-208,-201, -77,-113,-139,-126,  -6,  11,  19,  14,  61, 128, 159, 151,  86, 170, 210, 202,  53,  96, 122, 133, -18, -44, -47, -14, -84,-158,-190,-145, -90,-173,-217,-171, -25, -70,-114, -91,  73,  83,  54,  49, 157, 202, 182, 161,},
{ 126,  81, -70,-155, 191, 139, -87,-192, 205, 166, -79,-183, 185, 160, -49,-142, 121, 122,  -5, -82,  33,  28,   6,  -6, -78, -79,  18,  76,-169,-158,  22, 142,-209,-192,  32, 194,-197,-186,  45, 216,-132,-136,  34, 182, -31, -51,  16, 111,  67,  25, -18,   1, 143, 111, -47,-111, 186, 157, -76,-184, 178, 136, -86,-194,},
{-141,-177,-187,-195, -96, -90, -77,-104,   3,  82, 133,  81,  56, 179, 240, 167,  26, 124, 163,  86, -66, -36, -34, -87,-138,-151,-181,-210, -95,-111,-131,-147,  15,  55,  58,  28,  95, 173, 194, 160,  83, 127, 168, 143, -25, -55, -24,  -8,-104,-189,-195,-142, -81,-165,-183,-146,  26,   3,  -3,  10, 140, 173, 182, 182,},
{-163,-109, 104, 181,-217,-152,  98, 194,-200,-136,  74, 130,-105, -51,  41,  30,  12,  74,  10,-116,  85, 197,  15,-215, 104, 247,  33,-247,  33, 149,  38,-195, -86,   5,  53, -65,-159,-109,  62,  70,-160,-176,  53, 173, -92,-159,  22, 204,  27, -90, -21, 135, 134,   5, -59,  26, 214,  70,-115, -86, 231,  78,-136,-139,},
{  -9, 134,  86,-120, -48, 158,  97,-184,-129, 144, 112,-206,-210, 114, 149,-195,-276,  81, 180,-126,-261,  77, 208, -51,-226,  60, 183, -22,-160,  37, 103, -43, -55,  27,  16, -58,  44,  16, -56, -64, 125,   8, -84, -24, 173,   1, -89,  33, 187, -41, -88, 108, 160,-121,-106, 154, 109,-170,-121, 165,  69,-155,-110, 126,},
{-140, -66,   2,-179,-131,  11, 149,-107, -77,  99, 283, -16, -56,  66, 238, -64, -54, -53,  89,-150,  -6,-143, -26,-172, 119,-134, -21, -60, 221, -82,  68, 110, 242, -87,  91, 182, 154,-178,  -5,  84,  34,-264, -73, -51,  10,-190,  40, -78,  49, -42, 213, -53,  40,  41, 289, -55, -22, -10, 228,-142, -92,-121, 104,-202,},
{  11,-200,-213, -70, 129,-110,-103,  57, 245,  40,  54, 189, 205,  18,  37, 153,  60,-109, -82,  18, -61,-160,-141,-103,-106, -67,  16, -87, -65, 100, 260,  15, -82, 142, 320,  -9,-143,  28, 169,-155,-120, -79, -22,-255,  -7, -56, -31,-158, 125,  12,  57,  47, 190,  -5,  68, 170, 151,-125, -55, 149,  81,-210,-184,  44,},
{-122, -15,-119, -90,-122,  42, -56, -26, -69, 160,  55,  84, -63, 189,  45,  87, -92, 109,-102,  -6,-115,  31,-209, -56, -83,  72,-186,   2,   4, 188,-104, 126,  45, 233, -66, 197, -31, 127,-173, 128,-125,   2,-305,  35,-116,  52,-267,  59, -45, 204,-122, 128, -43, 282, -29, 148,-127, 215, -95,  42,-210,  76,-178, -57,},
{-155,-159,  68, 200,-158,-170,  47, 203, -59, -63, -14,  39,  89, 105, -45,-121, 189, 218, -41,-217, 106, 163,  -9,-182, -48,   2,  31,  -9,-176,-145,  58, 159,-189,-185,  54, 212, -70, -90,  12, 125, 102,  60, -62, -39, 213, 171, -97,-170, 181, 155, -86,-179,  24,  30, -39, -75,-131, -84,  65,  87,-196,-133, 110, 194,},
{  73,  91, 187, 210, -20, -73, -38,   9, -78,-163,-217,-183,  23,  11, -33, -74, 119, 198, 205, 123,  35,  79, 122,  84,-105,-188,-144,-109, -97,-176,-144, -91,  74,  78, 110,  94, 154, 193, 195, 107,  16,   9, -35,-108,-122,-177,-190,-191, -89,-106,  -4,  28,  67,  93, 229, 234, 112,  85,  97,  85, -13,-113,-189,-198,},
{ -91, 214, 173,-177,-190, 142, 159,-218,-207,   3,  95,-135, -92, -47,  59,  23, 109, -42, -32, 137, 248, -32,-158, 109, 244, -49,-225,  41, 120, -29,-122,  29, -68,  -1,  57,  53,-224,  -5, 155,  20,-249,  39, 136, -97,-106, 126,  76,-165,  61, 130,   2,-115, 114,  31, -89, -14,  86, -94,-143, 143,  58,-128,-108, 245,},
{-292,-153,  45,  42,-223, -16, 154,  90, -11, 143, 107, -32, 106, 169, -71,-209, 116,  81,-134,-173,  42, -63, -66,  60, -53,-133,  17, 284, -55, -99,  11, 236,   8,  16, -82, -50,  62, 128, -91,-217,  39, 170,  37,-150,-108,  42, 134,   4,-242,-125, 104, 120,-133,-144,  27, 134, 124,  -7, -99,   5, 283, 135,-140,-103,},
{  65, 163, 190, 176, -90, -86,-118, -88,-110,-139,-195,-151,  74, 130,  88,  95, 136, 202, 120, 138, -80, -88,-175, -72,-140,-148,-165, -53,   7, 116, 127, 136,  82, 202, 144,  58, -34, -60,-129,-184, -54,-175,-140,-118, 105,  20, 148, 184, 129,  57, 162, 154, -46,-156,-113,-124, -90,-134, -84,-178,  74, 143, 206,  45,},
{ 208,  -2,-171,  97, 175, -31,-188,  92, -12, -31, -56,  80,-182,   7,  69,  39,-206,  88, 124, -76, -72, 144,  79,-186,  55,  50, -51,-131, 113, -50, -94, 130, 108, -81,-120, 290,  16, -67,-143, 138, -70,  68, -52,-117,-134, 191, 170,-187,-171, 125, 229,-100,-131,-101,  58, -13, 106,-152,-128,  70, 323,  -9,-147, 110,},
{ 115, 192, -30,-262, -18, 113,  49,-146,-157, -97,  84, 133, -80,-175, -26, 250,  95, -22,-133,  89, 165, 186,-153,-130,  16, 163, -27, -94,-226, -39,  83,  80,-219,-127,  84, 128,  26,   6,   5,  -2, 233, 127,-106,-157, 172,  53, -89, -83, -44,-130,  24, 156,-132,-187,  89, 187, -40, -16,  73, -57,  82, 154,  52,-263,},
{  98, -89,  82, -44, 119,-135, 143, -61,  72,-198, 150, -94,  77,-207, 228, -92, 128,-168, 264,-111, 139,-168, 177,-133, 102,-187, 127,-113,  69,-139, 142, -12,  39, -67, 114,  36,   6, -24, -22, -42,   3,  54,-112, -65, -37, 160, -96,  79,-131, 167,-141, 183,-156, 119,-222, 120,-114, 152,-212,  60, -53, 229,-109,  36,},
{-128,-191,-107, -99,  96, 104, 190, 136, 119,  96,  79,  32,-100,-178,-213,-186, -51, -54,  -8,  37, 124, 213, 197, 218, -32, -22,-120, -72,-156,-130,-208,-125,  35, 183, 131, 134,  43, 129,  88,  57,-124,-163,-190,-154, -17, -41, -11,  22, 168, 143, 195, 179,  16, -91, -66, -64,-101,-160,-124,-161,  27, 121, 197,  37,},
{ 173, 183, -65,-242, -10,  10,  54, -13,-138,-224,  76, 249,  19,-142, -57, 103, 184, 141, -78,-190,  50, 148,  49,-155,-196, -91, 128, 102,-167,-149,  25, 125, 142,  72, -77, -50, 228, 176, -83,-126, -75, -50,  14,  22,-227,-170, 108, 146, -46,  20,  60, -33, 164, 167, -49,-187, 100,  42, -63, -31, -97,-163, -21, 218,},
{ 236, -49,-131,  70, 130,-109, -77,  72, -38, -48,  79,  21,-134,  16, 174, -82,-120,  52, 134,-197,  39,  31, -21, -92, 176, -23,-142, 201, 111, -54,-208, 227, -82,  41, -94,  24,-210, 204,  76,-162,-179, 183, 119,-133, -11, -33,  -2,  64, 198,-190,-161, 159, 235,-125, -87,  94,  10,   5, 127, -80,-179,  16, 197,-172,},
{  -2,-109, 162, -52,  67,-132, 188, -93, 147,-166, 114,-150, 173,-156, 130, -29, 107,-132, 110,  22,  25, -94, -22, -31, -60,  78,  -7,   1,-137, 236, -53,  19,-169, 204,-244,  64,-118, 204,-261, 173, -61, 187,-187, 170, -76,  56,-126,  46, -28,   0,  64, -86,  47, -63, 203,-117,  99,-190, 164, -82, 172,-199,  87, -18,},
{-100,-100,-156,-132,  98, 210, 204, 160,   9, -11, -50,   6,-139,-204,-219,-128,  62, 155, 229, 175,  35,  75,  44, -39,-113,-181,-256,-175,  78, 127, 145, 162,  44, 117,  74,  48,-138,-170,-216,-147,  28,  36,  67,  70, 114, 128, 141, 115, -86,-161,-165,-132,   3, -23, -23, -25, 104, 154, 183, 124, -79, -98, -98, -62,},
{ -47,-171,  46, 211,  86,  -6, -60, -63,  62, 158,  -2,-212,-119,  28, 114,   5,-156,-153,   9, 171, 142,  88,-162,   2, 165, 174,-114,-119,-191, -82,  97,  93,-158,-123, 113, 125, 167,  62, -78,-161, 196,  90, -53,-130,-100,-125,  89, 165,-178,-147,  41, 109,  88, 211, -28,-193, 122, 146, -64,-126,-106,-198,   9, 233,},
{ 217,   9,-297,  54,  58,  69, -97, 174,-289,  84,  46,  15,-269,  83,  81,-159, 103,  92,  53, -63, 249,-156, -98,  95, 128,-216,  -3, 114, -30,  12, 132, -89,-172,  95, 114,-233, -69,  71,  46,   9, 110, -39,-138, 185, 106, -50,-232,  82, -54,  92,  49, -12,-174,  81, 190,-100, -27, -86,  -6, -78, 194, -91, -31,  92,},
{ 130,-189,  34, -89, 202,-124, 249,  -4,  63,-217, 123,-100, -14, -92,  81, -96, -39, 200,  72,  13,-162,  99,-247,  34, -87, 157,-225, 202,  -8, 206,-108, 124, -92, -40, -76,-121,  57,-102, 180, -17, 199,-159, 165,  13, 102,-243,  19,-129,  23,  26, 156, -88, -94, 115,  45,  28,-129,  33,-203,  59,  -8, 163,-133,  94,},
{-181, -21, -78, -80,  14, 224, 101, 148, -13,  13,-216, -38, -30, -39,-151,  45,  61, 129, 171, 165,-118,-136, -46,-207,  34, -62,  97, -80, 191,  67, 195,  81, -65,-243,-170, -71,  23,  56,  29,  76,  27, 240,  93,  12,-222,-138,-207,-159,  22,  53,  81, 200, 187,  98,  16,  83, -55,-178,-203,-216, -19,  42, 207,  63,},
{-262,-108,  70, 132, 103, 198, -52,-100, 132,  88,-162,-122,-127,-162,  82, 268, -55, -59,  64,  11, 111, 134, -34,-301,  66, -23,  60,  82, -84,-216,   5, 226,  43,  58, -60,-129,  46, 197,  54,-175,-127,-146,  61, 167,  38,-114, -99,  94, 188, 168, -53,-165,-136, -34,  75, -15,-152, -85, 103, 163, 142,  90,-144, -79,},
{ 159,-184, -94, 182, 103, -24, -18, -31,-153, 103, 182,-173,-175,   0, 118, -91, 176, -30,-157, 153, 199,  17,-188, 107,-215,  26,  83,-103,-184,  45, 182, -19, 192, -13, -97, -20, 198,-107,-142,  41,-118, -11, 139, 120,-239,  60,  92,-141,  71, 103, -72,-121, 197, -89, -93, 207, -30,-123, -16,  80, -91, 134, 114,-184,},
{-113, -26,-175,  13,  72, 255,  55, 146,-136, -91,-158, -88,  14,  -4, 103,  36, 154,  34, 136, -63, -70,-282,-107, -35, 121, 119, 133, 126, -70,  89, -92,-184,-202, -51, -20,  75, 142, 144,  43, 160,  33,-100,-229,-160, -66, -29, 245,  67,  25,  14, 167, -97,  75,-192,-220, -98,  84, 115, 110, 267,-167,  81, -96,-115,},
{-237, -80, 132, 135, 170, 124,-152,-184, 125,  28, -50,  51,-233,-192, 146, 204,  60, 108, -43,-245, 163,  73,  -7, -36,-140,-208,  44, 222,  12, 123, -58,-110,  43, 169, -12,-118,-116,-180,  29, 188, 102,  -7, -50,   7,  80, 124,  10,-195,-174,-130, 127, 100,  73, -50, -32,  72, 176, 119,-124,-147,-173, -54, 102,  75,},
{  65,-278,  38, -16, 213,  46, 233, -63,-104, -91,   7,-144,-100,  65, -29, 122,  70, 214,-194,  93,-186,  31,-180,   2,-102,  85, 175,  81, 144,-124, -46,-122, 224,-153,  26,   5, -31, -26, 208,   8,-165,  27, -71,-170,  27, 209,-125, 168, -57,  59,-173, 182,-147,   1, -30,-120,  85,  34, 209, -78, 156,-241,  32,   8,},
{  38,   9,-244, 245,-104, 182, -98, -12,-174, 118, 180,-166, 110,-174,  38, -16, 315,-194, -30,  80, -50, -34, 148, -92,-224,  75, 117, -96,  53,  74,-136,  68,  80,  46,-234, 138,-165,  43,  61,  36, -42,  -2, 143,-170, 217,-124,   7, -46, 127,-186,  41, 109,-120,  50, 104, -77,-106, 166, -60, -92,  18,   1,-149, 183,},
{  -4, 131, -26,-241, -45,-122,  98, 319,  84, -32,-199, -89,  -2, 147,  78, -90,-159,-115, 158, 141, 198, -45,-219,-136,  31, 112, 151,  41,-267,-103,  48,  27, 191, 145,-168, -93,  42,  -4,  20, 119,-196,-165,  90,   9, 178, 152,  25,-195,  27,-117,  -8, 104,-119, -84,  12,  82,  76, 216, -36,-172, -50, -85, -11, 117,},
{ 197,-231, 155, -77,  84,-141, 170, -58,-115,  66,  -2, -78, -80, 196,-164, 135, -49,  58,-223, 173, -21,  22,  84, -94, 115,-165, 191,-111, 153,-201,  71,  -4, -43, 113,  -5, -37,-219, 187,-132,  66, -14,  89,-169, 132, 129, -97,  76, -72,  63,-202, 245,-116,  89,-112,  64, -37,   2, 112,-141,  73,-201, 192,-126,  69,},
{ 126,  24,-253, 116,-191,  66,  92,  86, -73,  26,  88,-264, 261, -83, -14,  89, -21,-126,  -9, 122,-181, 160,  52,-210,  44,  75, -48, 120,  40,-154,-152, 129,  19, 109, 152,-185, -62, -55, 107, -45, 110,-144,-128, 179,  27, 160, -66, -23,-321, 118,  53, -84, 105,  -6, -56, 101, 248,-116, -98,  -6,-132, -25, 205, -81,},
{ 109, 100,  56,  -6,-193,-223, -89,  16, 162, 218, 118,  -4, -66,-102, -94, -98, -70, -48,  72, 157, 149, 174, -67,-114,-193,-142, -52,  39, 119, 121, 154,  85,  33,-147,-189,-203, -37,  19, 249, 189,  59,  57,-142,-137, -79, -53,-105,  83,   0, 128, 194, 119, -11,-149,-216,-255,  73,  74, 193, 205, -42,  -5, -84, -78,},
{-177,  78,  78, -23, 158,  26,-151, -28,   9,-103,  29, 180, -87,  32, 104,-221, 141, -19,  -1,   4, -63, -66, -71, 198, -81, 197,  -5,-230,  70, -92,  61, 124,  85,-147,-108,  87, -99, 195, 106,-207, -94, -62,  36, 114, 188,  -6,-250,  87,-144, 126, 167, -87, -87,-179,  85, -37, 368,  -8,-141,  58,-258,  69,  80, -25,},
{ -48,  94, -40,-146, -14, -11,  75, 233,  56, -40,-226,-113, -48,  81, 238,  28, -23,-136, -48, -52, 168, 105,-122,  38,-208,  15, 138,  47,  41, -72, -91,-142, 216,  74,  18, 172,-294,-156,  19, -49, 181, 189,  30,-142,  30,-134, -61, 221,-155, -52,  16, -86, 198, 174,  97,-126,-113,-262, -47, 180,  -1, 173, -17, -83,},
{  22, -72, 179,-127, 119,-114, -19,  11, -92, 127, -79,  83,-171, 151, -81, -10, 141, -95, -33,  94,  64,-128, 135,-111, -38, -11, 132,-106,  42,  54,-173, 142,-151, 182,-188,  90, -99,  68,  71, -38, 234,-229, 102, -72,  61,-143, 142, -46,-149, 163, -42, -14, -92, 223,-300, 151,  11, -13,   5,  69, 151,-247, 250,-183,},
{-199, 132,  68,-141, 219, -40,-145, 201, -51, -77,  -9, -26, -67,  56, 247,-169, 223,-182,-148,  97,-164, 163,  31,  13,-116,  82, -33, -49, 197,-126,-105, 161, -92,  25, 177,-167,   9, -57,  32, -49, 113,  56,-194, 211,-231, 105,  44,-145, 112, -84,  75,  66, 110, -93, -92,   7,-219, 144, 160,-103, 126, -58,-123,  81,},
{  61,  58, 113, -92, -89,-205, -78,  68, 154, 286,  24,   2,-222,-176,-101, -37, 179,  63, 133, 100,  -6, -91, -83,-149,-138,  75, 119, 125, 134,  69,-175, -89, -91,-163,  93,  79,  99,  95, 113, -82, -38, -84,-204, -28, -35, 152, 161, 206,  15, -95,-193,-273,  40, -10, 270, 203,   3, -56,-149,-170, -40,  84,  -6, 109,},
{ 136,-211, 149, -86,  52,  13,  67, -33,-202, 128,-195,  92, -31, 192, -97, 100,  91,-182,  59, -77,  91,-194, 267,-102, -18, 101,-124, -18,-187, 199,-196, 203,  37,  33,  19, -67, 145,-272, 169, -81,   9,  13,  68, -13,-106, 151,-202,  48, -52,  38,   9,  97, 129,-163, 149,-163,  48, -76,  86, -30,-119, 170,-178, 107,},
{ 137,  -7,-100, -74,-156, -34, 209, 150,  96,  44,-216,-226, -38,  28, 175, 236, -22, -74,-157,-178, 117,  85, 121, 104,-179,-132, -42, -36, 160, 204, -59, -54,-127,-160,  88, 173,  87,  33, -69,-208,  -2,  56,  84, 125,-104,-116, -87, -27, 197, 151,  82, -52,-254,-184, -45, 102, 179, 217, -53, -69, -41,-140,  70,  18,},
{-104, 156,-137,  51,  21, -55,  56,  25, 139,-163, 118,-131, -44,  40,  36,  30,-126, 155,-214,  73,  42,   6,  27,  48,  68,-193, 169,-160, 101,  27,   6,  38,-249, 150,-206, 102,  34,  55,  56, -26, 214,-301, 156,-106, -95, 103,  11,  21,-119, 173,-227, 110, 150,-168, 142, -45,  42,-103, 187,-166,-111, 170,-206, 145,},
{ 126, -55,-129, 174,-211, 100, 174,-254, 147, -78, -65, 164, -27,  27,-116, -10,-101,  75, 194, -86, 175,-180,-153, 114,-126, 179, 124,-110,  13,-101, -69,  39, 136, -12, -36,  90,-218,  50, 144,-203, 214, -58,-135, 209,-126,  73, -25, -78, -30, -11, 144, -52, 188,-108,-128, 100,-233, 159,  96,-113, 118, -84, -62,  71,},
{-207, 216,-210, 135, 125, -41,  77, -71, 130,-308, 180, -71, -95, 234, -72, -11,-133,  72,-187, 167, 205,-162, 213,-149, -17, -68,  49, -60,-114, 198,-153, 150,  40, -78,  20, -84,  98,-137, 197, -22,-125, 165,-179, -17,  12,  20, -14, 151,  84,-154,  91,-164, -55,  91,   7,  50, -33,  44,-154,  80,  37, -60, 119, -72,},
{ -38, 175, -47,   9, -27,-223, -28,  39, 184, 121, 175,-101,-217,-136,-134,  34, 148, 223,  23,  83,-121,-218, -44,-103, 144, 121, 164,  76,-116, -92,-226, -97,  29, 145, 216, 148,   9,-177,-201,-160,  12, 135, 212, 146, -32, -86,-194,-157,  33,  50, 142, 193, -45, -28, -94,-190,  59,   8,  74, 131, -28,   6, -41, -49,},
{  62,  58, -82, -12,-127, -94, 125,  55, 192,  67, -99,-136,-209, -44,  83, 194, 139,  61, -86,-214, -42, -93, 113, 201, -36,  89,-129,-173,  46,  14,  89, 153, -70,-128, -46,-102, 146, 175,  29,  23,-222,-163, -63,  88, 234, 184,  43,-154,-182,-256,  37, 160, 148, 252, -66,-152,-125,-160,  28, 142,  66,  49,   6, -76,},
{  50,  -7,-128, 147,-115,  58, 193,-234, 157,-124,-147, 207,-145, 167,  35,-141,  75,-144,  64,  72,  75,  12, -65, -54,-191, 127,  58,   4, 182,-121,-125, 100,-102,  46, 193,-194,  12,   4,-163, 188,  19,  52, -33, -23, -45,-119, 210,-140, 141,  48,-218, 180,-231,  95, 106,-117, 252,-179,  12,  35,-129,  99, -16,  -9,},
{ 170,-168,  79, -29,-239, 188, -48, -21,  91,  19,-144, 163,  62,-179, 236,-205, -31, 114, -95, 101,-104,  90,-147,  62, 142,-171, 277,-181,  24,  -5,-130, 119,-202, 222, -98,  22, 201,-216, 128, -63, -56,  20,  13, -19, -85, 179,-123,  77, 105,-183,  70, -14, -45,  48,  71,-106, -21,  60,-169, 174,  25, -57, 116,-102,},
{ -87, 150,-171, 123, 110,-199, 216,-151,   1,  30, -33,  25,-140, 182,-160, 102, 199,-238, 176,-114,-151, 149, -60,  22,  15,  29,-108,  84, 106,-181, 201,-104,-141, 189,-137,  31,  82, -74, -21,  72,  60,-100, 160,-147,-142, 186,-188, 157,  78, -84,  61, -85,  48,-105, 127, -44, -97, 177,-216, 124,  49, -97, 124, -71,},
{  95,  -2, -32, -11,-187,  16,  61,  13, 241,  14,-107,  -6,-230, -70, 164,  -3, 208,  99,-170, -27,-224,-104, 150,  74, 228, 112,-126,-111,-188,-123, 106, 144, 141, 108, -39,-205,-109,-112,   4, 235,  46, 167, -15,-220,  17,-205,  29, 201, -29, 185, -15,-198,  18,-131, -30, 203, -11,  86,  45,-170,  12, -39, -29,  77,},
{  61, -52, -36,  68, -96,  79,  71,-137, 117,-108,-101, 193,-113, 133, 115,-233,  84,-146, -87, 234, -42, 145,  50,-233,   5,-132, -15, 225,  33, 133, -39,-193, -93,-117, 105, 122, 152,  89,-156, -36,-221, -39, 174,  -7, 274, -30,-159,  25,-274,  59, 150, -52, 220, -54,-139,  80,-153,  27, 127, -94,  65,   5, -77,  53,},
{ -98, 141,-144,  96, 140,-219, 206,-135,-131, 182,-119,  71,  48, -38, -23,  19,  70,-111, 126, -91,-148, 195,-175, 124, 147,-187, 154,-108, -67,  71, -22,  17, -26,  79,-135,  80, 102,-181, 205,-124,-149, 206,-178, 103, 120,-133,  82, -29, -13, -14,  57, -67, -87, 136,-183, 151, 123,-181, 225,-175, -60, 101,-126,  93,},
{  43, -14, -24,  11, -79,  30,  45, -31, 112, -53, -70,  68,-136,  58, 106,-102, 157, -58,-131, 123,-175,  65, 154,-153, 211, -97,-176, 188,-236, 108, 194,-206, 213, -79,-203, 208,-194,  81, 184,-199, 197,-104,-142, 177,-188, 115, 112,-145, 157,-111, -84, 118,-128,  99,  50, -89, 101, -81, -29,  60, -47,  44,  12, -28,},
{ -93, 121,-114,  72, 137,-209, 200,-116,-134, 208,-192, 113, 100,-144, 124, -77, -16,  44, -49,  30, -69,  65, -43,  35, 126,-152, 129, -98,-172, 225,-184, 132, 184,-231, 163,-112,-140, 164, -99,  66,  62, -72,  11,  -8,  19, -34,  88, -54, -92, 131,-158, 107, 139,-188, 200,-147,-132, 178,-182, 131,  68, -94,  94, -62,},
{  62, -84,  87, -54,-119, 164,-165, 102, 151,-207, 203,-122,-160, 220,-203, 119, 138,-197, 184,-109,-112, 166,-146,  86,  85,-137, 102, -56, -53,  89, -48,  19,   0,  10, -42,  39,  56, -95, 116, -87,-102, 142,-151, 108, 141,-197, 189,-115,-147, 208,-206, 118, 122,-168, 172,-107, -90, 127,-123,  80,  41, -65,  59, -35,},
{  30, -43,  44, -29, -58,  86, -86,  51,  84,-119, 116, -66,-104, 146,-133,  77, 108,-149, 137, -88,-121, 167,-157, 106, 137,-197, 186,-124,-144, 205,-192, 130, 148,-197, 181,-128,-142, 180,-172, 122, 139,-173, 168,-117,-138, 179,-161, 107, 126,-175, 157,-105, -99, 141,-130,  93,  75,-109,  96, -63, -38,  60, -55,  34,},
};

extern TMatrixCoeff g_aiKLT16x8Row[16][16] =
{
{  15,  39,  23,  55,  31,  69,  38,  82,  43,  92,  47,  98,  49,  99,  50,  96,},
{ -35,  20, -54,  28, -71,  35, -85,  41, -95,  45,-100,  47, -99,  45, -91,  41,},
{ -35, -92, -44,-112, -43,-101, -32, -65, -11, -11,  12,  43,  35,  87,  47, 105,},
{ -83,  30,-109,  42,-103,  42, -69,  28, -14,   5,  46, -21,  91, -42, 105, -47,},
{  39, 115,  29,  88,  -1,  -3, -32, -89, -42,-113, -23, -58,  16,  39,  44, 106,},
{ 112, -35,  95, -32,   9,  -2, -81,  34,-113,  43, -60,  19,  41, -21, 107, -43,},
{ -35,-115,  -3, -20,  36, 109,  23,  86, -19, -51, -35,-119,  -5, -23,  26, 100,},
{-117,  41, -31,   4, 101, -38,  91, -19, -42,  23,-119,  29, -24,  -4, 102, -26,},
{  37, 101, -21, -63, -34,-101,  17,  78,  27,  93, -13, -90, -15, -80,   8,  87,},
{ 103, -39, -50,  23,-106,  30,  65, -24, 102, -17, -85,  21, -84,   6,  89, -13,},
{ -40, -78,  47, 104,   5,  -6, -44,-105,  28, 105,  11,  14, -28,-117,  12,  72,},
{ -84,  41, 101, -52,   4,   9,-112,  37,  99, -37,  21,   3,-112,  22,  69, -15,},
{  34,  58, -57,-110,  41, 102,  -5, -45, -25, -38,  37, 105, -28,-115,  10,  53,},
{  63, -29,-111,  49, 100, -41, -40,  15, -42,  16, 106, -36,-116,  37,  54, -17,},
{ -13, -34,  25,  73, -32, -99,  34, 114, -32,-114,  28, 103, -18, -80,   6,  34,},
{  37, -12, -76,  24, 102, -31,-113,  33, 112, -32,-101,  28,  79, -20, -34,   8,},
};

extern TMatrixCoeff g_aiKLT16x8Col[8][8] =
{
{  43,  53,  61,  68,  71,  73,  71,  65,},
{ -76, -84, -68, -37,   7,  48,  74,  79,},
{  79,  60, -14, -79, -86, -34,  43,  78,},
{  76,  11, -81, -61,  43,  93,   6, -78,},
{  74, -39, -84,  52,  68, -70, -48,  63,},
{  64, -80,  -2,  80, -77,  -7,  82, -55,},
{ -52,  88, -72,  27,  31, -73,  89, -48,},
{ -29,  58, -74,  84, -83,  72, -58,  27,},
};

extern TMatrixCoeff g_aiKLT8x16Row[8][8] =
{
{  21,  37,  52,  65,  76,  81,  80,  74,},
{ -55, -80, -85, -62, -18,  31,  68,  80,},
{  80,  77,  19, -55, -85, -47,  30,  82,},
{  89,  33, -69, -72,  32,  84,  17, -74,},
{  83, -34, -80,  47,  71, -58, -61,  64,},
{  68, -75,  -7,  82, -68, -19,  88, -54,},
{  53, -88,  73, -22, -41,  83, -81,  36,},
{  28, -60,  78, -84,  84, -73,  50, -19,},
};

extern TMatrixCoeff g_aiKLT8x16Col[16][16] =
{
{  28,  42,  53,  63,  71,  76,  77,  73,  30,  44,  56,  66,  74,  79,  80,  76,},
{ -62, -83, -79, -55, -13,  32,  67,  79, -64, -85, -79, -54, -11,  35,  70,  83,},
{  78,  73,   4, -64, -86, -46,  31,  75,  79,  75,   6, -65, -87, -48,  33,  82,},
{  80,  25, -74, -66,  34,  91,  13, -74,  82,  28, -74, -70,  29,  93,  18, -75,},
{  79, -32, -82,  53,  69, -65, -48,  60,  81, -31, -91,  45,  76, -64, -54,  56,},
{  28,  47,  58,  69,  77,  82,  80,  63, -30, -44, -57, -70, -78, -77, -72, -59,},
{ -65,  76,   0, -79,  78,   6, -82,  54, -69,  78,   7, -85,  75,  14, -83,  50,},
{ -50, -79, -85, -59,  -8,  47,  82,  73,  49,  78,  79,  58,   5, -47, -79, -72,},
{  52, -86,  72, -28, -26,  72, -89,  49,  62, -87,  70, -26, -34,  76, -88,  42,},
{  70,  83,  17, -61, -93, -40,  46,  74, -66, -79, -18,  58,  88,  46, -46, -75,},
{ -86, -44,  69,  73, -38, -86,  12,  72,  79,  48, -66, -73,  31,  85,  -3, -75,},
{ -49,  55, -42,  67,-100,  94, -49,   5, -11,  57, -98,  90, -57,  46, -65,  46,},
{ -65,  -1, 105, -65, -45,  52,  58, -76,  78, -27, -62,   8,  96, -88, -29,  60,},
{ -87,  76,  16, -81,  70,   1, -70,  59,  84, -69, -23,  83, -66,  -8,  72, -57,},
{  64, -86,  69, -30, -24,  65, -88,  58, -63,  82, -61,  21,  31, -70,  91, -58,},
{ -36,  57, -74,  82, -81,  71, -59,  33,  36, -59,  75, -83,  79, -70,  57, -31,},
};

extern TMatrixCoeff g_aiKLT16x16Row[16][16] =
{
{  19,  26,  34,  41,  48,  55,  61,  67,  72,  77,  79,  81,  81,  80,  77,  73,},
{ -50, -67, -79, -86, -87, -81, -68, -50, -28,  -4,  20,  42,  60,  72,  78,  77,},
{  72,  86,  83,  64,  31,  -6, -44, -72, -86, -82, -61, -27,  13,  49,  75,  85,},
{  87,  86,  54,   2, -52, -86, -85, -47,   9,  59,  84,  76,  39, -11, -58, -82,},
{  91,  67,  -2, -68, -91, -52,  19,  77,  85,  37, -31, -80, -78, -30,  37,  82,},
{  85,  37, -46, -83, -44,  38,  86,  52, -35, -87, -58,  29,  89,  71, -13, -91,},
{  86,  12, -80, -66,  27,  90,  35, -69, -82,  10,  89,  50, -49, -85, -12,  73,},
{  85, -23, -96,  -6,  92,  35, -76, -60,  55,  80, -28, -87,  -6,  81,  34, -64,},
{  76, -52, -73,  55,  70, -62, -61,  66,  56, -70, -54,  68,  57, -70, -59,  68,},
{  61, -64, -37,  87,   1, -91,  41,  69, -73, -36,  91,  -1, -95,  40,  73, -58,},
{  63, -88,   5,  90, -85, -16,  94, -63, -36,  87, -33, -58,  74,   2, -70,  44,},
{  48, -81,  43,  32, -83,  74,  -8, -69,  91, -34, -54,  97, -54, -39,  91, -48,},
{ -45,  88, -79,  30,  36, -83,  84, -45, -17,  72, -90,  58,  11, -74,  86, -39,},
{  38, -78,  89, -72,  38,   4, -46,  78, -90,  73, -30, -20,  65, -92,  81, -33,},
{  25, -56,  79, -89,  86, -74,  59, -34,  -1,  34, -61,  79, -87,  82, -62,  26,},
{  12, -28,  41, -52,  61, -70,  80, -86,  87, -87,  84, -78,  68, -55,  41, -17,},
};

extern TMatrixCoeff g_aiKLT16x16Col[16][16] =
{
{  17,  25,  32,  40,  48,  54,  60,  66,  72,  76,  79,  81,  82,  81,  78,  73,},
{ -47, -64, -76, -85, -86, -82, -71, -53, -31,  -7,  18,  40,  60,  74,  80,  77,},
{  67,  85,  84,  68,  36,  -4, -38, -66, -82, -84, -68, -35,   9,  51,  76,  83,},
{  78,  90,  61,   9, -46, -82, -82, -52,  -3,  46,  81,  86,  49,  -8, -62, -84,},
{  78,  74,  10, -57, -88, -65,   2,  64,  90,  61, -19, -83, -84, -33,  38,  78,},
{  75,  50, -34, -85, -63,  24,  91,  68, -15, -85, -73,  14,  85,  73, -16, -77,},
{  80,  29, -60, -77,   3,  87,  51, -51, -88, -12,  78,  65, -40, -97, -11,  82,},
{  78,   6, -87, -38,  71,  70, -49, -90,  23,  92,  -2, -86, -14,  89,  27, -69,},
{ -79,  23,  92, -23, -88,  27,  90, -37, -90,  50,  75, -56, -60,  65,  41, -54,},
{ -68,  36,  67, -58, -41,  87,  -4, -92,  57,  61, -95,  -7,  95, -43, -63,  55,},
{ -69,  68,  38, -98,  35,  68, -93,  22,  71, -90,  20,  63, -79,   9,  65, -46,},
{  62, -80,  12,  69, -89,  34,  39, -81,  67,  -4, -64,  89, -51, -35,  98, -57,},
{ -70, 106, -67,  -8,  69, -83,  62, -17, -37,  68, -72,  44,  12, -69,  92, -48,},
{  50, -84,  87, -66,  23,  24, -62,  80, -73,  50, -13, -34,  71, -89,  92, -46,},
{  32, -63,  78, -85,  79, -60,  34,  -4, -25,  55, -79,  90, -88,  76, -62,  28,},
{ -20,  38, -52,  65, -74,  82, -90,  92, -88,  81, -73,  61, -48,  36, -26,  11,},
};
#endif

//--------------------------------------------------------------------------------------------------
//coefficients
//--------------------------------------------------------------------------------------------------

const UChar g_aucChromaScale[NUM_CHROMA_FORMAT][chromaQPMappingTableSize] =
{
  //0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
  { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,29,30,31,32,33,33,34,34,35,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51 },
  { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,51,51,51,51,51 },
  { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,51,51,51,51,51 }
};

// ====================================================================================================================
// Intra prediction
// ====================================================================================================================

const UChar g_aucIntraModeNumFast_UseMPM_2D[7 - MIN_CU_LOG2 + 1][7 - MIN_CU_LOG2 + 1] =
{
  {3, 3, 3, 3, 2, 2},  //   4x4,   4x8,   4x16,   4x32,   4x64,   4x128,
  {3, 3, 3, 3, 3, 2},  //   8x4,   8x8,   8x16,   8x32,   8x64,   8x128,
  {3, 3, 3, 3, 3, 2},  //  16x4,  16x8,  16x16,  16x32,  16x64,  16x128,
  {3, 3, 3, 3, 3, 2},  //  32x4,  32x8,  32x16,  32x32,  32x64,  32x128,
  {2, 3, 3, 3, 3, 2},  //  64x4,  64x8,  64x16,  64x32,  64x64,  64x128,
  {2, 2, 2, 2, 2, 3},  // 128x4, 128x8, 128x16, 128x32, 128x64, 128x128,
};

const UChar g_aucIntraModeNumFast_UseMPM[MAX_CU_DEPTH] =
{
  3,  //   2x2
  8,  //   4x4
  8,  //   8x8
  3,  //  16x16
  3,  //  32x32
  3,  //  64x64
  3   // 128x128
};
const UChar g_aucIntraModeNumFast_NotUseMPM[MAX_CU_DEPTH] =
{
  3,  //   2x2
  9,  //   4x4
  9,  //   8x8
  4,  //  16x16   33
  4,  //  32x32   33
  5,  //  64x64   33
  5   // 128x128
};

const UChar g_chroma422IntraAngleMappingTable[NUM_INTRA_MODE] =
//                                                               H                                                               D                                                               V
//0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, DM
{ 0, 1, 2, 2, 2, 2, 2, 2, 2, 3,  4,  6,  8, 10, 12, 13, 14, 16, 18, 20, 22, 23, 24, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 44, 44, 45, 46, 46, 46, 47, 48, 48, 48, 49, 50, 51, 52, 52, 52, 53, 54, 54, 54, 55, 56, 56, 56, 57, 58, 59, 60, DM_CHROMA_IDX };

extern const UChar  g_intraMode65to33AngMapping[NUM_INTRA_MODE] =
//                                                               H                                                               D                                                               V
//0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, DM
{ 0, 1, 2, 2, 3, 3, 4, 4, 5, 5,  6,  6,  7,  7,  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, DM_CHROMA_IDX };

extern const UChar g_intraMode33to65AngMapping[36] =
//                                   H                               D                               V
//0, 1, 2, 3, 4, 5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, DM
{ 0, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, DM_CHROMA_IDX };


// ====================================================================================================================
// Decision tree templates
// ====================================================================================================================

const DecisionTreeTemplate g_mtSplitDTT = compile(
  decision( DTT_SPLIT_DO_SPLIT_DECISION,
  /*0*/ DTT_SPLIT_NO_SPLIT,
  /*1*/ decision( DTT_SPLIT_HV_DECISION,
        /*0*/ decision( DTT_SPLIT_H_IS_BT_12_DECISION,
              /*0*/ DTT_SPLIT_TT_HORZ,
              /*1*/ DTT_SPLIT_BT_HORZ ),
        /*1*/ decision( DTT_SPLIT_V_IS_BT_12_DECISION,
              /*0*/ DTT_SPLIT_TT_VERT,
              /*1*/ DTT_SPLIT_BT_VERT ) ) ) );

#if HEVC_USE_PART_SIZE
const DecisionTreeTemplate g_partSizeDTT = compile(
  decision( DTT_PS_IS_2Nx2N,
  /*0*/ decision( DTT_PS_IS_2Nx,
        /*0*/ decision( DTT_PS_IS_NOT_NxN,
              /*0*/ DTT_PS_NxN,
              /*1*/ decision( DTT_PS_IS_Nx2N,
                    /*0*/ decision( DTT_PS_IS_nRx2N,
                          /*0*/ DTT_PS_nLx2N,
                          /*1*/ DTT_PS_nRx2N ),
                    /*1*/ DTT_PS_Nx2N ) ),
        /*1*/ decision( DTT_PS_IS_2NxN,
              /*0*/ decision( DTT_PS_IS_2NxnD,
                    /*0*/ DTT_PS_2NxnU,
                    /*1*/ DTT_PS_2NxnD ),
              /*1*/ DTT_PS_2NxN ) ),
  /*1*/ DTT_PS_2Nx2N ) );

#endif


// ====================================================================================================================
// Misc.
// ====================================================================================================================
SizeIndexInfo*           gp_sizeIdxInfo = NULL;
int                      g_BlockSizeTrafoScale[MAX_CU_SIZE + 1][MAX_CU_SIZE + 1][2];
SChar                    g_aucLog2    [MAX_CU_SIZE + 1];
SChar                    g_aucNextLog2[MAX_CU_SIZE + 1];
SChar                    g_aucPrevLog2[MAX_CU_SIZE + 1];

UnitScale g_miScaling( MIN_CU_LOG2, MIN_CU_LOG2 );


// ====================================================================================================================
// Scanning order & context model mapping
// ====================================================================================================================

// scanning order table
UInt* g_scanOrder     [SCAN_NUMBER_OF_GROUP_TYPES][SCAN_NUMBER_OF_TYPES][MAX_CU_SIZE / 2 + 1][MAX_CU_SIZE / 2 + 1];
UInt* g_scanOrderPosXY[SCAN_NUMBER_OF_GROUP_TYPES][SCAN_NUMBER_OF_TYPES][MAX_CU_SIZE / 2 + 1][MAX_CU_SIZE / 2 + 1][2];

const UInt ctxIndMap4x4[4 * 4] =
{
  0, 1, 4, 5,
  2, 3, 4, 5,
  6, 6, 8, 8,
  7, 7, 8, 8
};


const UInt g_uiMinInGroup[LAST_SIGNIFICANT_GROUPS] = { 0,1,2,3,4,6,8,12,16,24,32,48,64,96 };
const UInt g_uiGroupIdx[MAX_TU_SIZE] = { 0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9, 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13 };
const UInt g_auiGoRiceRange[MAX_GR_ORDER_RESIDUAL] =
{
  6, 5, 6, COEF_REMAIN_BIN_REDUCTION, COEF_REMAIN_BIN_REDUCTION, COEF_REMAIN_BIN_REDUCTION, COEF_REMAIN_BIN_REDUCTION, COEF_REMAIN_BIN_REDUCTION, COEF_REMAIN_BIN_REDUCTION, COEF_REMAIN_BIN_REDUCTION
};

#if HEVC_USE_SCALING_LISTS
const TChar *MatrixType[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM] =
{
  {
    "INTRA2X2_LUMA",
    "INTRA2X2_CHROMAU",
    "INTRA2X2_CHROMAV",
    "INTER2X2_LUMA",
    "INTER2X2_CHROMAU",
    "INTER2X2_CHROMAV"
  },
  {
    "INTRA4X4_LUMA",
    "INTRA4X4_CHROMAU",
    "INTRA4X4_CHROMAV",
    "INTER4X4_LUMA",
    "INTER4X4_CHROMAU",
    "INTER4X4_CHROMAV"
  },
  {
    "INTRA8X8_LUMA",
    "INTRA8X8_CHROMAU",
    "INTRA8X8_CHROMAV",
    "INTER8X8_LUMA",
    "INTER8X8_CHROMAU",
    "INTER8X8_CHROMAV"
  },
  {
    "INTRA16X16_LUMA",
    "INTRA16X16_CHROMAU",
    "INTRA16X16_CHROMAV",
    "INTER16X16_LUMA",
    "INTER16X16_CHROMAU",
    "INTER16X16_CHROMAV"
  },
  {
   "INTRA32X32_LUMA",
   "INTRA32X32_CHROMAU_FROM16x16_CHROMAU",
   "INTRA32X32_CHROMAV_FROM16x16_CHROMAV",
   "INTER32X32_LUMA",
   "INTER32X32_CHROMAU_FROM16x16_CHROMAU",
   "INTER32X32_CHROMAV_FROM16x16_CHROMAV"
  },
};

const TChar *MatrixType_DC[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM] =
{
  {
  },
  {
  },
  {
  },
  {
    "INTRA16X16_LUMA_DC",
    "INTRA16X16_CHROMAU_DC",
    "INTRA16X16_CHROMAV_DC",
    "INTER16X16_LUMA_DC",
    "INTER16X16_CHROMAU_DC",
    "INTER16X16_CHROMAV_DC"
  },
  {
    "INTRA32X32_LUMA_DC",
    "INTRA32X32_CHROMAU_DC_FROM16x16_CHROMAU",
    "INTRA32X32_CHROMAV_DC_FROM16x16_CHROMAV",
    "INTER32X32_LUMA_DC",
    "INTER32X32_CHROMAU_DC_FROM16x16_CHROMAU",
    "INTER32X32_CHROMAV_DC_FROM16x16_CHROMAV"
  },
};

const Int g_quantTSDefault4x4[4 * 4] =
{
  16,16,16,16,
  16,16,16,16,
  16,16,16,16,
  16,16,16,16
};

const Int g_quantIntraDefault8x8[8 * 8] =
{
  16,16,16,16,17,18,21,24,
  16,16,16,16,17,19,22,25,
  16,16,17,18,20,22,25,29,
  16,16,18,21,24,27,31,36,
  17,17,20,24,30,35,41,47,
  18,19,22,27,35,44,54,65,
  21,22,25,31,41,54,70,88,
  24,25,29,36,47,65,88,115
};

const Int g_quantInterDefault8x8[8 * 8] =
{
  16,16,16,16,17,18,20,24,
  16,16,16,17,18,20,24,25,
  16,16,17,18,20,24,25,28,
  16,17,18,20,24,25,28,33,
  17,18,20,24,25,28,33,41,
  18,20,24,25,28,33,41,54,
  20,24,25,28,33,41,54,71,
  24,25,28,33,41,54,71,91
};

const UInt g_scalingListSize [SCALING_LIST_SIZE_NUM] = { 4, 16, 64, 256, 1024, 4096, 16384 };
const UInt g_scalingListSizeX[SCALING_LIST_SIZE_NUM] = { 2,  4,  8,  16,   32,   64,   128 };
#endif

const UChar g_NonMPM[257] = { 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8 };


//! \}
